{"version":3,"sources":["assets/nierika.jpg","assets/logoWolf.gif","components/Languages.js","components/Login.js","components/Footer.js","components/Credentials.js","components/Nav.js","components/UsersList.js","components/TextTypes.js","components/Publish.js","components/NewPublication.js","components/Comments.js","components/DrawTimeLine.js","components/TimeLine.js","components/Profile.jsx","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","language","location","currenUser","picCurrenUser","Footer","react_default","a","createElement","className","Component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","Nav","react_router_dom","to","href","id","type","placeholder","aria-label","UsersList","Segment","Grid","relaxed","columns","Column","Card","Image","src","wrapped","ui","Content","Header","Meta","Description","extra","Icon","name","options","MexicanLanguages","map","_ref","Abbreviation","Language","State","Location","value","text","Autonym","flag","locationOption","LanguagesOptions","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_ref2","setState","languageSelection","console","log","handleSel","_ref3","state","LangSelected","_ref4","property","push","Row","Label","attached","Dropdown","fluid","clearable","search","onChange","locationSelector","TextTypes","List","divided","horizontal","size","Item","key","Checkbox","label","Publish","originalLangTitle","originalLangPost","spanishTitle","spanishPost","langLocation","contentType","postImg","allowInv","defineProperty","target","postDate","Date","toLocaleDateString","year","month","day","collection","add","date","user","userPic","language_location","textTag","img","allow_inv","then","docRef","catch","error","posting","get","querySnapshot","forEach","doc","raised","as","alt","role","Languages","padded","Form","secondary","Input","bind","TextArea","Button","color","components_TextTypes","toggle","icon","labelPosition","onClick","handleClick","AccordionExampleStandard","activeIndex","titleProps","index","newIndex","Accordion","Title","active","components_Publish","Comments","Comment","Group","Avatar","Author","Metadata","Text","Actions","Action","DrawTimeLine","_this2","post","item","celled","width","basic","pointing","circular","inverted","GridColumn","Rating","maxRating","defaultRating","dividing","components_Comments","TimeLine","posts","orderBy","onSnapshot","dataPost","data","NewPublication_AccordionExampleStandard","components_DrawTimeLine","Profile","Login","pictures","LoginFB","assertThisInitialized","LoginGoogle","handleLogout","auth","onAuthStateChanged","database","ref","on","snapshot","concat","val","provider","GoogleAuthProvider","signInWithPopup","result","email","code","message","FacebookAuthProvider","signOut","lastLogin","displayName","photoURL","picture","components_Nav","react_router","path","exact","component","renderLogin","Splash","Brand","App","splashEnded","setTimeout","logo","components_Login","components_Footer","components_Splash","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1d8f243.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nierika.82938523.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logoWolf.a859dd17.gif\";","import React, { Component } from 'react';\nimport { Dropdown, Segment, Grid, Label } from 'semantic-ui-react';\nimport MexicanLanguages from '../data/mexican_languages';\n\nconst options = MexicanLanguages.map(\n  ({ Abbreviation, Language, State, Location, Autonym }) => ({\n    value: Language,\n    text: '[' + Abbreviation + ']  ' + Language + ' / ' + Autonym,\n    flag: 'mx'\n  })\n);\nlet locationOption = [];\nlet language;\nlet location;\n\nclass LanguagesOptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      languageSelection: ''\n    };\n  }\n\n  locationSelector(LangSelected) {\n    MexicanLanguages.map(({ Language, Location }) => {\n      if (LangSelected === Language) {\n        for (let property in Location) {\n          locationOption.push({\n            value: Location[property],\n            text: Location[property]\n          });\n        }\n      }\n      return locationOption;\n    });\n  }\n\n  handleChange = (e, { value, name }) => {\n    locationOption = [];\n    this.setState({ languageSelection: value });\n    console.log(value);\n    language = value;\n  };\n\n  handleSel = (e, { value }) => {\n    console.log('val: ' + value);\n    location = value;\n  };\n\n  render() {\n    return (\n      <Grid.Row>\n        <Grid.Column>\n          <Segment>\n            <Label attached=\"top\">Selecciona la Lengua Originaria</Label>\n            <Dropdown\n              placeholder=\"Selecciona Lenguaje\"\n              fluid\n              clearable=\"true\"\n              search\n              options={options}\n              onChange={this.handleChange}\n            />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column>\n          <Segment>\n            <Label attached=\"top\">Selecciona la localidad</Label>\n            <Dropdown\n              placeholder=\"Estado, Municipio, Localidad\"\n              fluid\n              clearable=\"true\"\n              search\n              options={locationOption}\n              onChange={\n                (this.locationSelector(this.state.languageSelection),\n                this.handleSel)\n              }\n            />\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    );\n  }\n}\n\nexport default LanguagesOptions;\nexport { language, location };\n","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { db } from './Credentials';\nimport Nav from './Nav';\n//import NewPublication from './NewPublication';\n//import TimeLine from './TimeLine';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport UsersList from './UsersList';\nimport TimeLine from './TimeLine';\nimport Profile from './Profile.jsx';\n\nlet currenUser;\nlet picCurrenUser;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      pictures: []\n    };\n    this.LoginFB = this.LoginFB.bind(this);\n    this.LoginGoogle = this.LoginGoogle.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ user }); //user : user\n    });\n    firebase //para qué hago esto??\n      .database()\n      .ref('pictures')\n      .on('child_added', snapshot => {\n        this.setState({\n          pictures: this.state.pictures.concat(snapshot.val())\n        });\n      });\n  }\n\n  LoginGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.error(`Error ${error.code}: ${error.message}`));\n  }\n  LoginFB() {\n    let provider = new firebase.auth.FacebookAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.error(`Error ${error.code}: ${error.message}`));\n  }\n\n  handleLogout() {\n    firebase\n      .auth()\n      .signOut()\n      .then(result =>\n        console.log(`${result.user.email} ha terminado su sesión.`)\n      )\n      .catch(error =>\n        console.log(`Ha ocurrido un error ${error.code}: ${error.message}`)\n      );\n  }\n\n  renderLogin() {\n    //if User have an a succesful login, get the date and the user basic data\n    if (this.state.user) {\n      const lastLogin = new Date();\n      currenUser = this.state.user.displayName;\n      console.log(currenUser);\n      picCurrenUser = this.state.user.photoURL;\n      console.log(picCurrenUser);\n      db.collection('users')\n        .add({\n          name: this.state.user.displayName,\n          email: this.state.user.email,\n          picture: this.state.user.photoURL,\n          lastLogin: lastLogin\n        })\n        .then(function(docRef) {\n          console.log('Document written with ID: ', docRef.id);\n        })\n        .catch(function(error) {\n          console.error('Error adding document: ', error);\n        });\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a\n                    className=\"nav-link\"\n                    href=\"https://vaniushar.github.io/nierika/\"\n                  >\n                    <img\n                      className=\"profile\"\n                      src={this.state.user.photoURL}\n                      alt={this.state.user.displayName}\n                    />\n                    <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </ul>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a\n                    className=\"nav-link\"\n                    href=\"https://vaniushar.github.io/nierika/\"\n                  >\n                    <h3> {this.state.user.displayName}</h3>\n                    <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </ul>\n              <button className=\"btn btn-danger\" onClick={this.handleLogout}>\n                Salir\n              </button>\n            </div>\n          </nav>\n          <Router>\n            <Nav />\n            <Switch>\n              <Route path=\"/\" exact component={TimeLine} />\n              <Route path=\"/usuarios\" component={UsersList} />\n              <Route path=\"/perfil\" component={Profile} />\n            </Switch>\n          </Router>\n        </div>\n      );\n    } else {\n      //if user isn't log\n      return (\n        <div className=\"main\">\n          <h2 className=\"welcome\">\n            Red Social para aprender y enseñar una Lengua Originaria\n          </h2>\n          <section className=\"login\">\n            <h2>Inicia Sesión</h2>\n            <button\n              type=\"button\"\n              onClick={this.LoginGoogle}\n              className=\"btn btn-danger google\"\n            >\n              Login con Google\n            </button>\n            <br />\n            <br />\n            <button onClick={this.LoginFB} className=\"btn facebook\" />\n          </section>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return <div className=\"App-intro\">{this.renderLogin()}</div>;\n  }\n}\n\nexport default Login;\nexport { currenUser, picCurrenUser };\n","//Componente footer con los créditos de la web page\nimport React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"App-footer\">\n        <p>\n          <em>Vania Ramírez &nbsp; </em> &nbsp; CDMX &nbsp; 2019.\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyCgNc_FLBAnpD_90joGLfphWunHY1OYjns',\n  authDomain: 'nierika-7a8d3.firebaseapp.com',\n  databaseURL: 'https://nierika-7a8d3.firebaseio.com',\n  projectId: 'nierika-7a8d3',\n  storageBucket: 'nierika-7a8d3.appspot.com',\n  messagingSenderId: '795639442168'\n};\n\nconst init = firebase.initializeApp(config);\nconst db = firebase.firestore();\n//sdb.settings({ timestampsInSnapshots: true });\n\nexport { db, init };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link to=\"/\">\n          <a\n            className=\"navbar-brand\"\n            href=\"https://vaniushar.github.io/nierika/\"\n          >\n            NIERIKA\n          </a>\n        </Link>\n        {/* <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        > */}\n        {/* <span className=\"navbar-toggler-icon\" />\n        </button> */}\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/perfil\">\n                <a\n                  className=\"nav-link\"\n                  // disabled={visible}\n                  // onClick={this.handleShowClick}\n                >\n                  Mi perfil\n                </a>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/usuarios\">\n                <a className=\"nav-link\">Usuarios</a>\n              </Link>\n            </li>\n          </ul>\n          <form className=\"form-inline my-2 my-lg-0\">\n            <input\n              className=\"form-control mr-sm-2\"\n              type=\"search\"\n              placeholder=\"Buscar post sobre...\"\n              aria-label=\"Search\"\n            />\n            <button\n              className=\"btn btn-outline-success my-2 my-sm-0\"\n              type=\"submit\"\n            >\n              Buscar\n            </button>\n          </form>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","//Lista de Usuarios que se han logeado y sus datos de hablantes\nimport React, { Component } from 'react';\nimport { Grid, Image, Card, Icon, Segment } from 'semantic-ui-react';\n\nclass UsersList extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Users List</h1>\n        <Segment className=\"usersList\">\n          <Grid relaxed columns={4}>\n            <Grid.Column>\n              <Card>\n                <Image\n                  src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\"\n                  wrapped\n                  ui={false}\n                />\n                <Card.Content>\n                  <Card.Header>Matthew</Card.Header>\n                  <Card.Meta>\n                    <span className=\"date\">Joined in 2015</span>\n                  </Card.Meta>\n                  <Card.Description>\n                    Matthew is a musician living in Nashville.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <a>\n                    <Icon name=\"user\" />\n                    22 Friends\n                  </a>\n                </Card.Content>\n              </Card>\n              <br />\n              <Image src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\" />\n            </Grid.Column>\n            <Grid.Column>\n              <Image src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\" />\n            </Grid.Column>\n            <Grid.Column>\n              <Image src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\" />\n            </Grid.Column>\n            <Grid.Column>\n              <Image src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\" />\n            </Grid.Column>\n          </Grid>\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default UsersList;\n","import React from 'react';\nimport { List, Checkbox } from 'semantic-ui-react';\n\nconst TextTypes = () => {\n  const sizes = [\n    'Cuento',\n    'Poesía',\n    'Narración verídica',\n    'Noticia',\n    'Frase o Refrán',\n    'Mito o Leyenda',\n    'Gramática',\n    'Vocabulario'\n  ];\n\n  return (\n    <div>\n      <List divided horizontal>\n        {sizes.map(size => (\n          <List.Item key={size}>\n            <List.Content>\n              <Checkbox className=\"check-option\" label={size} />\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default TextTypes;\n","import React, { Component } from 'react';\nimport { db } from './Credentials';\nimport { currenUser, picCurrenUser } from './Login';\nimport LanguagesOptions from './Languages';\nimport TextTypes from './TextTypes';\nimport {\n  Icon,\n  Button,\n  Segment,\n  Checkbox,\n  Grid,\n  Label,\n  Header,\n  TextArea,\n  Form\n} from 'semantic-ui-react';\nimport { language, location } from './Languages';\n\nconst posting = (\n  originalLangTitle,\n  originalLangPost,\n  spanishTitle,\n  spanishPost\n) => {\n  const d = new Date();\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const postDate = d.toLocaleDateString('es-ME', options);\n  let allowInv = true;\n\n  db.collection('timeLine')\n    .add({\n      date: postDate,\n      user: currenUser,\n      userPic: picCurrenUser,\n      language: language,\n      language_location: location,\n      originalLangTitle: originalLangTitle,\n      originalLangPost: originalLangPost,\n      spanishTitle: spanishTitle,\n      spanishPost: spanishPost,\n      textTag: '',\n      img: '',\n      allow_inv: allowInv\n    })\n    .then(function(docRef) {\n      console.log('Document written with ID: ', docRef.id);\n    })\n    .catch(function(error) {\n      console.error('Error adding document: ', error);\n    });\n};\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalLangTitle: '',\n      originalLangPost: '',\n      spanishTitle: '',\n      spanishPost: '',\n      language: '',\n      langLocation: '',\n      contentType: '',\n      postImg: '',\n      allowInv: ''\n    };\n  }\n\n  handleChange(e) {\n    // this.setState({ value: e.target.value });\n    // console.log(this.state.value);\n    console.log(language, location);\n    this.setState({ language: language, langLocation: location });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(\n      ' titulo en esp ' + this.state.spanishTitle,\n      ' titulo en LI ' + this.state.originalLangTitle,\n      ' lang: ' + this.state.language,\n      ' loc ' + this.state.langLocation\n    );\n  }\n\n  handleClick() {\n    console.log(this.state.originalLangTitle, this.state.spanishTitle);\n    // this.setState({\n    //   originalLangPost: this.state.value,\n    //   spanishPost: this.state.value1\n    // });\n    posting(\n      this.state.originalLangTitle,\n      this.state.originalLangPost,\n      this.state.spanishTitle,\n      this.state.spanishPost\n    );\n    db.collection('timeLine')\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {});\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"newPost\">\n        <section className=\"timeLine\">\n          <Segment raised>\n            <Grid columns=\"equal\">\n              <Grid.Row>\n                <Grid.Column>\n                  <Header as=\"h2\">\n                    <img\n                      src={picCurrenUser}\n                      alt={currenUser}\n                      className=\"profile\"\n                    />\n                    {currenUser}\n                  </Header>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <h4>\n                      ¡Comparte con la comunidad una frase o texto en una lengua\n                      originaria!{' '}\n                      <span role=\"img\" alt=\"happy emoji face\">\n                        {' '}\n                        😄\n                      </span>\n                    </h4>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <LanguagesOptions />\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top\">\n                      {' '}\n                      <Icon name=\"pencil alternate\" />\n                      Escribe en Lengua Originaria{' '}\n                    </Label>\n                    <Form>\n                      <Segment secondary>\n                        <Form.Input\n                          label=\"Título en Lengua Original\"\n                          name=\"originalLangTitle\"\n                          value={this.state.originalLangTitle}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Escribe el Título\"\n                        />\n                        <TextArea\n                          name=\"originalLangPost\"\n                          value={this.state.originalLangPost}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"A bird in a branch have not fear because it is confidence is on its wings\"\n                        />\n                      </Segment>\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top\">\n                      {' '}\n                      <Icon name=\"pencil alternate\" />\n                      Agrega la traducción al español\n                    </Label>\n                    <Form className=\"text-al\">\n                      <Segment secondary>\n                        <Form.Input\n                          label=\"Título en español\"\n                          name=\"spanishTitle\"\n                          value={this.state.spanishTitle}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Escribe el Título en español\"\n                        />\n\n                        <TextArea\n                          name=\"spanishPost\"\n                          value={this.state.spanishPost}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Los usuarios validarán la traducción de tu texto...\"\n                        />\n                      </Segment>\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top right\">\n                      {' '}\n                      <Icon name=\"camera retro\" />\n                      Si quieres agrega una imagen\n                    </Label>\n                    <Button color=\"teal\">Buscar en mis archivos</Button> &nbsp;\n                    <Button color=\"orange\">Acceder a la cámara</Button>\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment>\n                    <Label attached=\"top right\">\n                      {' '}\n                      <Icon name=\"tags\" />\n                      Selecciona el tipo de contenido\n                    </Label>\n                    <TextTypes />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row />\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <Checkbox toggle />\n                    <h4>\n                      Permitir que mi publicación y mis datos de hablante sean\n                      utilizados para investigación y fomento al conocimiento de\n                      las Lenguas Originarias\n                    </h4>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Button\n                    icon\n                    labelPosition=\"right\"\n                    onClick={this.handleClick.bind(this)}\n                    color=\"green\"\n                  >\n                    <Icon name=\"paper plane outline\" /> Publicar{' '}\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n\n          <div className=\"card-footer text-muted\"> </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Publish;\n\n//TODO: Allow investigation prechecked value to true, allow turn it to false with a e listenner\n//TODO: Allow img posting to DB\n//TODO: Allow the array creation for tags selection and get the logic for draw it on the post\n","import React, { Component } from 'react';\nimport { Accordion, Icon, Button } from 'semantic-ui-react';\nimport Publish from './Publish';\n\nexport default class AccordionExampleStandard extends Component {\n  state = { activeIndex: 0 };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const { activeIndex } = this.state;\n\n    return (\n      <Accordion>\n        <Accordion.Title\n          active={activeIndex === 0}\n          index={0}\n          onClick={this.handleClick}\n        >\n          <div className=\"btn-background\">\n            <Button color=\"green\">\n              <Icon name=\"dropdown\" />\n              Publicar\n            </Button>\n          </div>\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <Publish />\n        </Accordion.Content>\n      </Accordion>\n    );\n  }\n}\n\n//WORKING\n// import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\n// import {\n//   Button,\n//   Checkbox,\n//   Grid,\n//   Header,\n//   Icon,\n//   Image,\n//   Menu,\n//   Segment,\n//   Sidebar\n// } from 'semantic-ui-react';\n// import Publish from './Publish';\n// import TimeLine from './TimeLine';\n\n// let buttonNew = 'Nueva Publicación';\n\n// const HorizontalSidebar = ({ animation, direction, visible }) => (\n//   <Sidebar animation={animation} direction={direction} visible={visible}>\n//     <Publish />\n//   </Sidebar>\n// );\n\n// HorizontalSidebar.propTypes = {\n//   animation: PropTypes.string,\n//   direction: PropTypes.string,\n//   visible: PropTypes.bool\n// };\n\n// export default class SidebarTransitions extends Component {\n//   state = {\n//     animation: 'overlay',\n//     direction: 'top',\n//     dimmed: false,\n//     visible: false,\n//     button: 'Nueva Publicación'\n//   };\n\n//   handleAnimationChange = animation => () =>\n//     this.setState(prevState => ({\n//       animation,\n//       visible: !prevState.visible\n//     }));\n\n//   //       handleClick = () => {\n//   //       console.log(this.button, this.visible);\n//   //        if (this.state.visible == false) {\n//   //             console.log(this.button, this.visible)\n//   //           this.setState(this.button: 'Cerrar')} else this.setState(this.button: 'Nueva Publicación');\n\n//   //     };\n\n//   handleDimmedChange = (e, { checked }) => this.setState({ dimmed: checked });\n\n//   //   handleDirectionChange = direction => () =>\n//   //     this.setState({ direction, visible: false });\n\n//   render() {\n//     const { animation, dimmed, direction, visible } = this.state;\n//     const vertical = direction === 'bottom' || direction === 'top';\n\n//     return (\n//       <div>\n//         <div className=\"btn-background\">\n//           <Button color=\"green\" onClick={this.handleAnimationChange('overlay')}>\n//             {this.state.button}\n//           </Button>\n//         </div>\n//         <Sidebar.Pushable>\n//           {vertical ? (\n//             <HorizontalSidebar\n//               animation={animation}\n//               direction={direction}\n//               visible={visible}\n//               // button={button}\n//             />\n//           ) : null}\n\n//           <Sidebar.Pusher dimmed={dimmed && visible}>\n//             <TimeLine />\n//           </Sidebar.Pusher>\n//         </Sidebar.Pushable>\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport { Comment } from 'semantic-ui-react';\n\nconst Comments = () => (\n  <Comment.Group>\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">Matt</Comment.Author>\n        <Comment.Metadata>\n          <div>Hoy a las 5:42PM</div>\n        </Comment.Metadata>\n        <Comment.Text>Gran aporte!</Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Responder</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n    </Comment>\n\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">Elliot Fu</Comment.Author>\n        <Comment.Metadata>\n          <div>Yesterday at 12:30AM</div>\n        </Comment.Metadata>\n        <Comment.Text>\n          <p>This has been very useful for my research. Thanks as well!</p>\n        </Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Responder</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n      <Comment.Group>\n        <Comment>\n          <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\" />\n          <Comment.Content>\n            <Comment.Author as=\"a\">Jenny Hess</Comment.Author>\n            <Comment.Metadata>\n              <div>Just now</div>\n            </Comment.Metadata>\n            <Comment.Text>Elliot you are always so right :)</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action>Responder</Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n      </Comment.Group>\n    </Comment>\n  </Comment.Group>\n);\n\nexport default Comments;\n","import React, { Component } from 'react';\nimport {\n  Grid,\n  Icon,\n  Button,\n  Segment,\n  Label,\n  Rating,\n  GridColumn,\n  Accordion,\n  Header\n} from 'semantic-ui-react';\nimport Comments from './Comments';\n\nclass DrawTimeLine extends Component {\n  state = { activeIndex: 0 };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    console.log(this.props.post);\n\n    const { activeIndex } = this.state; //ACCORDION\n\n    return (\n      <div>\n        {this.props.post.map((item, key) => (\n          <div key={key} className=\"main\">\n            <section className=\"timeLine\">\n              <Segment>\n                <Grid celled=\"internally\">\n                  <Grid.Row>\n                    <Grid.Column width={3}>\n                      <img\n                        className=\"profile\"\n                        alt={item.user}\n                        src={item.userPic}\n                      />\n                      <h5>{item.user}</h5>\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                      <h2>{item.originalLangTitle}</h2>\n                      <h3>{item.spanishTitle}</h3>\n                      <h6>\n                        {item.language} de {item.language_location}.\n                      </h6>\n                    </Grid.Column>\n                    <Grid.Column width={3}>\n                      <p>{item.date}</p>\n                      <Button as=\"div\" labelPosition=\"left\">\n                        <Label as=\"a\" basic color=\"red\" pointing=\"right\">\n                          2,048\n                        </Label>\n                        <Button color=\"red\">\n                          <Icon name=\"heart\" />\n                        </Button>\n                      </Button>\n                      <div className=\"publisher-btns\">\n                        <Button circular color=\"green\" icon=\"edit\" />\n                        <Button\n                          circular\n                          inverted\n                          color=\"grey\"\n                          icon=\"trash alternate\"\n                        />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <GridColumn width={2}>Etiquetas</GridColumn>\n                    <Grid.Column width={14}>\n                      <Label as=\"a\" color=\"blue\">\n                        Narración Verídica\n                      </Label>\n                      <Label as=\"a\" color=\"orange\" key=\"orange\">\n                        Cuento\n                      </Label>\n                      <Label as=\"a\" color=\"green\" key=\"green\">\n                        Vocabulario\n                      </Label>\n                      <Label as=\"a\" color=\"red\" key=\"red\">\n                        Gramática\n                      </Label>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <Grid.Column width={16}>\n                      <Segment>\n                        <p>{item.originalLangPost}</p>\n                        <Segment.Group horizontal>\n                          <Segment>\n                            Valoración{' '}\n                            <Rating\n                              maxRating={5}\n                              defaultRating={3}\n                              icon=\"star\"\n                            />\n                          </Segment>\n                        </Segment.Group>\n                      </Segment>\n                      <Segment>\n                        <p>{item.spanishPost}</p>\n                        <Segment.Group horizontal>\n                          <Segment>\n                            Valoración{' '}\n                            <Rating\n                              maxRating={5}\n                              defaultRating={3}\n                              icon=\"star\"\n                            />\n                          </Segment>\n                        </Segment.Group>\n                      </Segment>\n                    </Grid.Column>\n                  </Grid.Row>\n\n                  <Grid.Row>\n                    <Grid.Column width={12}>\n                      <Accordion>\n                        <Accordion.Title\n                          active={activeIndex === 0}\n                          index={0}\n                          onClick={this.handleClick}\n                        >\n                          <Header as=\"h3\" dividing className=\"accordion-com\">\n                            Comentarios <Icon name=\"dropdown\" />\n                          </Header>\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                          <Comments />\n                        </Accordion.Content>\n\n                        {/* <Accordion.Title\n          active={activeIndex === 1}\n          index={1}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          What kinds of dogs are there?\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 1}>\n          <p>\n            There are many breeds of dogs. Each breed varies in size and\n            temperament. Owners often select a breed of dog that they find to be\n            compatible with their own lifestyle and desires from a companion.\n          </p>\n        </Accordion.Content> */}\n                      </Accordion>\n                    </Grid.Column>\n                    <Grid.Column width={4}>\n                      <h3>Compartir</h3>\n                      <div>\n                        <Button circular color=\"blue\" icon=\"facebook\" />\n                        <Button circular color=\"twitter\" icon=\"twitter\" />\n                        <Button circular color=\"linkedin\" icon=\"linkedin\" />\n                        <Button circular color=\"teal\" icon=\"share\" />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                {/*  \n\n                {/* <Form reply>\n                    <Button\n                      content=\"Editar\"\n                      labelPosition=\"left\"\n                      icon=\"edit\"\n                      primary\n                    />\n                    <Button\n                      content=\"Eliminar\"\n                      color=\"red\"\n                      labelPosition=\"left\"\n                      icon=\"trash alternate\"\n                    />\n                  </Form>\n\n                  <p className=\"card-text\"> </p>\n                  <a className=\"btn btn-Success\" /> */}\n\n                {/* <Feed>\n                    <Feed.Event>\n                      <Feed.Content>\n                        <Feed.Meta>\n                          <Feed.Like>\n                            <Icon name=\"like\" />4 Likes\n                          </Feed.Like>\n                          <input\n                            placeholder=\"¿A qué lengua pertenece?\"\n                            id=\"Language\"\n                          />\n                        </Feed.Meta>\n                      </Feed.Content>\n                    </Feed.Event>\n                  </Feed>\n                  <div className=\"card-footer text-muted\"> </div>\n                  <div className=\"card-header\">\n                    <Comment.Group>\n                      <p>Comentar...</p>\n                      <img\n                        src={picCurrenUser}\n                        alt={currenUser}\n                        className=\"profile\"\n                      />\n                      <h3> {currenUser}</h3>\n\n                      <Form reply>\n                        <Form.TextArea />\n                        <Button\n                          content=\"Agregar Comentario\"\n                          labelPosition=\"left\"\n                          icon=\"edit\"\n                          primary\n                        />\n                      </Form>\n                    </Comment.Group>\n                    <Coments />\n                  </div> */}\n                {/* </Grid> */}\n              </Segment>\n            </section>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default DrawTimeLine;\n\n/*\n{post && post !== undefined\n                ? post.forEach((item, key) => (\n                    <div>\n                      <h5 key={key} className=\"card-title\">\n                        {item.data.user} </h5>\n                        </div>\n                          ))\n                : null}\n                        */\n","import React, { Component } from 'react';\nimport { db } from './Credentials';\nimport NewPublication from './NewPublication';\nimport DrawTimeLine from './DrawTimeLine';\n\nclass TimeLine extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    db.collection('timeLine')\n      .orderBy('date', 'desc')\n      .onSnapshot(querySnapshot => {\n        const posts = [];\n        querySnapshot.forEach(doc => {\n          const dataPost = doc.data();\n          posts.push(dataPost);\n          console.log('enviando data', posts);\n        });\n        this.setState({ posts: posts });\n      });\n  }\n  render() {\n    return (\n      <div>\n        <NewPublication />\n        <DrawTimeLine post={this.state.posts} />\n      </div>\n    );\n  }\n}\n\nexport default TimeLine;\n","import React, { Component } from 'react';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Mi perfil</h2>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","//Splash view components\nimport React, { Component } from 'react';\nimport Brand from '../assets/logoWolf.gif';\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div className=\"intro\">\n        <img src={Brand} className=\"wolf\" alt=\"WolfLogo made by\" />\n        <h1 className=\"Brand\">Vaniusha Co.</h1>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n","import React, { Component } from 'react';\nimport logo from './assets/nierika.jpg';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\nimport Splash from './components/Splash';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      splashEnded: false\n    };\n  }\n\n  componentDidMount() {\n    //setTimeOut for the wolf splash\n    if (!this.state.splashEnded) {\n      setTimeout(() => this.setState({ splashEnded: true }), 2000);\n    }\n  }\n  render() {\n    //conditional rendering for Splash:\n    if (!this.state.splashEnded) {\n      return <Splash />;\n    }\n    return (\n      //else bind the Login view and components\n      <div className=\"main\">\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"Nierika Huirrarica\" />\n            <h1 className=\"App-title\">Nierika</h1>\n          </header>\n          <Login />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}