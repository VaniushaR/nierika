{"version":3,"sources":["assets/nierika.jpg","assets/logoWolf.gif","components/Footer.js","components/Navbar.js","components/Credentials.js","components/Login.js","components/Languages.js","components/Locations.js","components/TextTypes.js","components/Publish.js","components/NewPublication.js","components/Comments.js","components/DrawTimeLine.js","components/TimeLine.js","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","Component","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","currenUser","picCurrenUser","countryOptions","key","value","flag","text","LanguagesOptionsDropdown","Dropdown","fluid","search","selection","options","LocationOptionsDropdown","TextTypes","List","divided","horizontal","map","size","Item","Content","Checkbox","class","label","Publish","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","originalLangTitle","originalLangPost","spanishTitle","spanishPost","language","langLocation","contentType","postImg","allowInv","e","setState","defineProperty","target","name","console","log","postDate","Date","toDateString","collection","add","date","user","userPic","then","docRef","catch","error","posting","get","querySnapshot","forEach","doc","Segment","raised","Grid","columns","Row","Column","Header","as","src","alt","Label","attached","Languages","Locations","padded","Icon","Form","secondary","Input","onChange","handleChange","bind","TextArea","Button","color","components_TextTypes","toggle","icon","labelPosition","onClick","handleClick","AccordionExampleStandard","activeIndex","titleProps","index","newIndex","Accordion","Title","active","components_Publish","Comments","Comment","Group","Avatar","Author","Metadata","Text","Actions","Action","DrawTimeLine","_this2","post","item","celled","width","basic","pointing","circular","inverted","GridColumn","Rating","maxRating","defaultRating","dividing","components_Comments","TimeLine","posts","orderBy","onSnapshot","dataPost","data","push","components_DrawTimeLine","Login","pictures","LoginFB","assertThisInitialized","LoginGoogle","handleLogout","auth","onAuthStateChanged","database","ref","on","snapshot","concat","val","provider","GoogleAuthProvider","signInWithPopup","result","email","code","message","FacebookAuthProvider","signOut","lastLogin","displayName","photoURL","picture","components_Navbar","NewPublication_AccordionExampleStandard","components_TimeLine","renderLogin","Splash","Brand","App","splashEnded","setTimeout","logo","components_Login","components_Footer","components_Splash","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fb7c67c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nierika.82938523.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logoWolf.a859dd17.gif\";","//Componente footer con los créditos de la web page\nimport React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"App-footer\">\n        <p>\n          <em>Vania Ramírez &nbsp; </em> &nbsp; CDMX &nbsp; 2019.\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","//Crear componente de barra de navegación con bootstrap\nimport React, { Component } from 'react';\nimport {\n  Button,\n  Header,\n  Icon,\n  Image,\n  Menu,\n  Segment,\n  Sidebar\n} from 'semantic-ui-react';\n\nclass Navbar extends Component {\n  // state = { visible: false };\n\n  // handleHideClick = () => this.setState({ visible: false });\n  // handleShowClick = () => this.setState({ visible: true });\n  // handleSidebarHide = () => this.setState({ visible: false });\n\n  render() {\n    // const { visible } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\">NIERIKA</a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <a\n                // className=\"nav-link\"\n                // disabled={visible}\n                // onClick={this.handleShowClick}\n                >\n                  Mi perfil\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\">Usuarios</a>\n              </li>\n            </ul>\n            <form className=\"form-inline my-2 my-lg-0\">\n              <input\n                className=\"form-control mr-sm-2\"\n                type=\"search\"\n                placeholder=\"Buscar post sobre...\"\n                aria-label=\"Search\"\n              />\n              <button\n                className=\"btn btn-outline-success my-2 my-sm-0\"\n                type=\"submit\"\n              >\n                Buscar\n              </button>\n            </form>\n          </div>\n        </nav>\n\n        {/* <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            icon=\"labeled\"\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={visible}\n            width=\"thin\"\n          >\n            <Menu.Item as=\"a\">\n              <Icon name=\"home\" />\n              Home\n            </Menu.Item>\n            <Menu.Item as=\"a\">\n              <Icon name=\"gamepad\" />\n              Games\n            </Menu.Item>\n            <Menu.Item as=\"a\">\n              <Icon name=\"camera\" />\n              Channels\n            </Menu.Item>\n            <Sidebar.Pusher>\n              <Segment className=\"sidebar-profile\" />\n            </Sidebar.Pusher>\n          </Sidebar>\n        </Sidebar.Pushable> */}\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyCgNc_FLBAnpD_90joGLfphWunHY1OYjns',\n  authDomain: 'nierika-7a8d3.firebaseapp.com',\n  databaseURL: 'https://nierika-7a8d3.firebaseio.com',\n  projectId: 'nierika-7a8d3',\n  storageBucket: 'nierika-7a8d3.appspot.com',\n  messagingSenderId: '795639442168'\n};\n\nconst init = firebase.initializeApp(config);\nconst db = firebase.firestore();\ndb.settings({ timestampsInSnapshots: true });\n\nexport { db, init };\n","//Componente Login para ingresar con Facebook\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\n//import { Post } from './Post';\nimport Navbar from './Navbar';\nimport NewPublication from './NewPublication';\nimport { db } from './Credentials';\nimport TimeLine from './TimeLine';\n\nlet currenUser;\nlet picCurrenUser;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      pictures: []\n    };\n    this.LoginFB = this.LoginFB.bind(this);\n    this.LoginGoogle = this.LoginGoogle.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ user }); //user : user\n    });\n    firebase //para qué hago esto??\n      .database()\n      .ref('pictures')\n      .on('child_added', snapshot => {\n        this.setState({\n          pictures: this.state.pictures.concat(snapshot.val())\n        });\n      });\n  }\n\n  LoginGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.error(`Error ${error.code}: ${error.message}`));\n  }\n  LoginFB() {\n    let provider = new firebase.auth.FacebookAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.error(`Error ${error.code}: ${error.message}`));\n  }\n\n  handleLogout() {\n    firebase\n      .auth()\n      .signOut()\n      .then(result =>\n        console.log(`${result.user.email} ha terminado su sesión.`)\n      )\n      .catch(error =>\n        console.log(`Ha ocurrido un error ${error.code}: ${error.message}`)\n      );\n  }\n\n  renderLogin() {\n    //if User have an a succesful login, get the date and the user basic data\n    if (this.state.user) {\n      const lastLogin = new Date();\n      currenUser = this.state.user.displayName;\n      console.log(currenUser);\n      picCurrenUser = this.state.user.photoURL;\n      console.log(picCurrenUser);\n      db.collection('users')\n        .add({\n          name: this.state.user.displayName,\n          email: this.state.user.email,\n          picture: this.state.user.photoURL,\n          lastLogin: lastLogin\n        })\n        .then(function(docRef) {\n          console.log('Document written with ID: ', docRef.id);\n        })\n        .catch(function(error) {\n          console.error('Error adding document: ', error);\n        });\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\">\n                    <img\n                      className=\"profile\"\n                      src={this.state.user.photoURL}\n                      alt={this.state.user.displayName}\n                    />\n                    <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </ul>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\">\n                    <h3> {this.state.user.displayName}</h3>\n                    <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </ul>\n              <button className=\"btn btn-danger\" onClick={this.handleLogout}>\n                Salir\n              </button>\n            </div>\n          </nav>\n          <Navbar />\n          <NewPublication />\n          <TimeLine />\n        </div>\n      );\n    } else {\n      //if user isn't log\n      return (\n        <div className=\"main\">\n          <h2 className=\"welcome\">\n            Red Social para aprender y enseñar una Lengua Originaria\n          </h2>\n          <section className=\"login\">\n            <h2>Inicia Sesión</h2>\n            <button\n              type=\"button\"\n              onClick={this.LoginGoogle}\n              className=\"btn btn-danger google\"\n            >\n              Login con Google\n            </button>\n            <br />\n            <br />\n            <button onClick={this.LoginFB} className=\"btn facebook\" />\n          </section>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return <div className=\"App-intro\">{this.renderLogin()}</div>;\n  }\n}\n\nexport default Login;\nexport { currenUser, picCurrenUser };\n/*\n\nhandleUpload(event) {\n  const file = event.target.files[0];\n  const storageRef = firebase.storage().ref(`Fotos/${file.name}`);\n  const storageRef = firebase.storage().ref('/fotos/');\n  //const task = storageRef.put(file);\n  //const storageRef = firebase.database().ref(`pictures/${file.name}`);\n  //var task = storageRef.put(file);\n\n  task.on(\n    'state_changed',\n    snapshot => {\n      let percentage =\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      this.setState({\n        uploadValue: percentage\n      });\n    },\n    error => {\n      console.error(error.message);\n    },\n    () =>\n      storageRef.getDownloadURL().then(url => {\n        const record = {\n          photoURL: this.state.user.photoURL,\n          displayName: this.state.user.displayName,\n          image: url\n          //image: task.snapshot.downloadURL\n        };\n        const databaseRef = firebase.database().ref('pictures');\n        const newPicture = databaseRef.push();\n        newPicture.set(record);\n      })\n  );\n}\n\n Upload complete\n console.log(task.snapshot);\n      storageRef\n        .child(file.name)\n        .getDownloadURL()\n        .then(url => {\n          this.setState({\n            picture: url\n          });\n        });\n*/\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst countryOptions = [\n  { key: 'af', value: 'af', flag: 'af', text: 'Afghanistan' },\n  { key: 'ax', value: 'ax', flag: 'ax', text: 'Aland Islands' },\n  { key: 'al', value: 'al', flag: 'al', text: 'Albania' },\n  { key: 'dz', value: 'dz', flag: 'dz', text: 'Algeria' },\n  { key: 'as', value: 'as', flag: 'as', text: 'American Samoa' },\n  { key: 'ad', value: 'ad', flag: 'ad', text: 'Andorra' },\n  { key: 'ao', value: 'ao', flag: 'ao', text: 'Angola' },\n  { key: 'ai', value: 'ai', flag: 'ai', text: 'Anguilla' },\n  { key: 'ag', value: 'ag', flag: 'ag', text: 'Antigua' },\n  { key: 'ar', value: 'ar', flag: 'ar', text: 'Argentina' },\n  { key: 'am', value: 'am', flag: 'am', text: 'Armenia' },\n  { key: 'aw', value: 'aw', flag: 'aw', text: 'Aruba' },\n  { key: 'au', value: 'au', flag: 'au', text: 'Australia' },\n  { key: 'at', value: 'at', flag: 'at', text: 'Austria' },\n  { key: 'az', value: 'az', flag: 'az', text: 'Azerbaijan' },\n  { key: 'bs', value: 'bs', flag: 'bs', text: 'Bahamas' },\n  { key: 'bh', value: 'bh', flag: 'bh', text: 'Bahrain' },\n  { key: 'bd', value: 'bd', flag: 'bd', text: 'Bangladesh' },\n  { key: 'bb', value: 'bb', flag: 'bb', text: 'Barbados' },\n  { key: 'by', value: 'by', flag: 'by', text: 'Belarus' },\n  { key: 'be', value: 'be', flag: 'be', text: 'Belgium' },\n  { key: 'bz', value: 'bz', flag: 'bz', text: 'Belize' },\n  { key: 'bj', value: 'bj', flag: 'bj', text: 'Benin' }\n];\n\nconst LanguagesOptionsDropdown = () => (\n  <Dropdown\n    placeholder=\"Select Country\"\n    fluid\n    search\n    selection\n    options={countryOptions}\n  />\n);\n\nexport default LanguagesOptionsDropdown;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst countryOptions = [\n  { key: 'af', value: 'af', flag: 'af', text: 'Afghanistan' },\n  { key: 'ax', value: 'ax', flag: 'ax', text: 'Aland Islands' },\n  { key: 'al', value: 'al', flag: 'al', text: 'Albania' },\n  { key: 'dz', value: 'dz', flag: 'dz', text: 'Algeria' },\n  { key: 'as', value: 'as', flag: 'as', text: 'American Samoa' },\n  { key: 'ad', value: 'ad', flag: 'ad', text: 'Andorra' },\n  { key: 'ao', value: 'ao', flag: 'ao', text: 'Angola' },\n  { key: 'ai', value: 'ai', flag: 'ai', text: 'Anguilla' },\n  { key: 'ag', value: 'ag', flag: 'ag', text: 'Antigua' },\n  { key: 'ar', value: 'ar', flag: 'ar', text: 'Argentina' },\n  { key: 'am', value: 'am', flag: 'am', text: 'Armenia' },\n  { key: 'aw', value: 'aw', flag: 'aw', text: 'Aruba' },\n  { key: 'au', value: 'au', flag: 'au', text: 'Australia' },\n  { key: 'at', value: 'at', flag: 'at', text: 'Austria' },\n  { key: 'az', value: 'az', flag: 'az', text: 'Azerbaijan' },\n  { key: 'bs', value: 'bs', flag: 'bs', text: 'Bahamas' },\n  { key: 'bh', value: 'bh', flag: 'bh', text: 'Bahrain' },\n  { key: 'bd', value: 'bd', flag: 'bd', text: 'Bangladesh' },\n  { key: 'bb', value: 'bb', flag: 'bb', text: 'Barbados' },\n  { key: 'by', value: 'by', flag: 'by', text: 'Belarus' },\n  { key: 'be', value: 'be', flag: 'be', text: 'Belgium' },\n  { key: 'bz', value: 'bz', flag: 'bz', text: 'Belize' },\n  { key: 'bj', value: 'bj', flag: 'bj', text: 'Benin' }\n];\n\nconst LocationOptionsDropdown = () => (\n  <Dropdown\n    placeholder=\"Estado, Municipio, Localidad\"\n    fluid\n    search\n    selection\n    options={countryOptions}\n  />\n);\n\nexport default LocationOptionsDropdown;\n","import React from 'react';\nimport { List, Checkbox } from 'semantic-ui-react';\n\nconst TextTypes = () => {\n  const sizes = [\n    'Cuento',\n    'Poesía',\n    'Narración verídica',\n    'Noticia',\n    'Frase o Refrán',\n    'Mito o Leyenda',\n    'Gramática',\n    'Vocabulario'\n  ];\n\n  return (\n    <div>\n      <List divided horizontal>\n        {sizes.map(size => (\n          <List.Item key={size}>\n            <List.Content>\n              <Checkbox class=\"check-option\" label={size} />\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default TextTypes;\n","import React, { Component } from 'react';\nimport { db } from './Credentials';\nimport { currenUser, picCurrenUser } from './Login';\nimport LanguagesOptions from './Languages';\nimport LocationOptions from './Locations';\nimport TextTypes from './TextTypes';\nimport {\n  Feed,\n  Icon,\n  Button,\n  Divider,\n  Segment,\n  Checkbox,\n  Grid,\n  Label,\n  Select,\n  Header,\n  List,\n  TextArea,\n  Form,\n  Input\n} from 'semantic-ui-react';\n\n//sconst sizes = ['mini', 'tiny', 'small', 'large', 'big', 'huge', 'massive'];\n\nconst posting = (\n  originalLangTitle,\n  originalLangPost,\n  spanishTitle,\n  spanishPost\n) => {\n  const d = new Date();\n  const postDate = d.toDateString();\n\n  db.collection('timeLine')\n    .add({\n      date: postDate,\n      user: currenUser,\n      userPic: picCurrenUser,\n      originalLangTitle: originalLangTitle,\n      originalLangPost: originalLangPost,\n      spanishTitle: spanishTitle,\n      spanishPost: spanishPost\n    })\n    .then(function(docRef) {\n      console.log('Document written with ID: ', docRef.id);\n    })\n    .catch(function(error) {\n      console.error('Error adding document: ', error);\n    });\n};\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalLangTitle: '',\n      originalLangPost: '',\n      spanishTitle: '',\n      spanishPost: '',\n      language: '',\n      langLocation: '',\n      contentType: '',\n      postImg: '',\n      allowInv: ''\n    };\n  }\n\n  handleChange(e) {\n    // this.setState({ value: e.target.value });\n    // console.log(this.state.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(\n      'estados ' + this.state.spanishTitle,\n      ' y ' + this.state.originalLangTitle\n    );\n  }\n\n  handleClick() {\n    console.log(this.state.originalLangTitle, this.state.spanishTitle);\n    // this.setState({\n    //   originalLangPost: this.state.value,\n    //   spanishPost: this.state.value1\n    // });\n    posting(\n      this.state.originalLangTitle,\n      this.state.originalLangPost,\n      this.state.spanishTitle,\n      this.state.spanishPost\n    );\n    db.collection('timeLine')\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {});\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"newPost\">\n        <section className=\"timeLine\">\n          <Segment raised>\n            <Grid columns=\"equal\">\n              <Grid.Row>\n                <Grid.Column>\n                  <Header as=\"h2\">\n                    <img\n                      src={picCurrenUser}\n                      alt={currenUser}\n                      className=\"profile\"\n                    />\n                    {currenUser}\n                  </Header>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <h4>\n                      ¡Comparte con la comunidad una frase o texto en una lengua\n                      originaria! 😄\n                    </h4>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <Label attached=\"top\">\n                      Selecciona la Lengua Originaria\n                    </Label>\n                    <LanguagesOptions />\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment>\n                    <Label attached=\"top\">Selecciona su localidad</Label>\n                    <LocationOptions />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top\">\n                      {' '}\n                      <Icon name=\"pencil alternate\" />\n                      Escribe en Lengua Originaria{' '}\n                    </Label>\n                    <Form>\n                      <Segment secondary>\n                        <Form.Input\n                          label=\"Título en Lengua Original\"\n                          name=\"originalLangTitle\"\n                          value={this.state.originalLangTitle}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Escribe el Título\"\n                        />\n                        <TextArea\n                          name=\"originalLangPost\"\n                          value={this.state.originalLangPost}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"A bird in a branch have not fear because it is confidence is on its wings\"\n                        />\n                      </Segment>\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top\">\n                      {' '}\n                      <Icon name=\"pencil alternate\" />\n                      Agrega la traducción al español\n                    </Label>\n                    <Form className=\"text-al\">\n                      <Segment secondary>\n                        <Form.Input\n                          label=\"Título en español\"\n                          name=\"spanishTitle\"\n                          value={this.state.spanishTitle}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Escribe el Título en español\"\n                        />\n\n                        <TextArea\n                          name=\"spanishPost\"\n                          value={this.state.spanishPost}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Los usuarios validarán la traducción de tu texto...\"\n                        />\n                      </Segment>\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top right\">\n                      {' '}\n                      <Icon name=\"camera retro\" />\n                      Si quieres agrega una imagen\n                    </Label>\n                    <Button color=\"teal\">Buscar en mis archivos</Button> &nbsp;\n                    <Button color=\"orange\">Acceder a la cámara</Button>\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment>\n                    <Label attached=\"top right\">\n                      {' '}\n                      <Icon name=\"tags\" />\n                      Selecciona el tipo de contenido\n                    </Label>\n                    <TextTypes />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row />\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <Checkbox toggle />\n                    <h4>\n                      Permitir que mi publicación y mis datos de hablante sean\n                      utilizados para investigación y fomento al conocimiento de\n                      las Lenguas Originarias\n                    </h4>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Button\n                    icon\n                    labelPosition=\"right\"\n                    onClick={this.handleClick.bind(this)}\n                    color=\"green\"\n                  >\n                    <Icon name=\"paper plane outline\" /> Publicar{' '}\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n\n          <div className=\"card-footer text-muted\"> </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Publish;\n\n/* Notes:\nimport React, { Component } from 'react';\nimport { db } from './Credentials';\nimport { currenUser, picCurrenUser } from './Login';\nimport LanguagesOptions from './Languages';\nimport LocationOptions from './Locations';\nimport TextTypes from './TextTypes';\nimport {\n  Feed,\n  Icon,\n  Button,\n  Divider,\n  Segment,\n  Checkbox,\n  Grid,\n  Label,\n  Select,\n  Header,\n  List,\n  TextArea,\n  Form\n} from 'semantic-ui-react';\n\nconst sizes = ['mini', 'tiny', 'small', 'large', 'big', 'huge', 'massive'];\n\nconst posting = originalLangPost => {\n  const postDate = new Date();\n\n  const locationOptions = [\n    { name: 'Baja California Sur, San Pancho' },\n    { name: 'Puebla, San Andrés' },\n    { name: 'Veracruz, Tlacotalpan' }\n  ];\n\n  db.collection('timeLine')\n    .add({\n      originalLangPost,\n      date: postDate,\n      user: currenUser,\n      userPic: picCurrenUser\n    })\n    .then(function(docRef) {\n      console.log('Document written with ID: ', docRef.id);\n    })\n    .catch(function(error) {\n      console.error('Error adding document: ', error);\n    });\n};\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      originalLangPost: '',\n      language: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleClick() {\n    this.setState({ originalLangPost: this.state.value });\n    posting(this.state.value);\n    db.collection('timeLine')\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {});\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"newPost\">\n        <section className=\"timeLine\">\n          <Segment raised>\n            <Grid columns=\"equal\">\n              <Grid.Row>\n                <Grid.Column>\n                  <Header as=\"h2\">\n                    <img\n                      src={picCurrenUser}\n                      alt={currenUser}\n                      className=\"profile\"\n                    />\n                    {currenUser}\n                  </Header>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <h4>\n                      ¡Comparte con la comunidad una frase o texto en una lengua\n                      originaria! 😄\n                    </h4>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <Label attached=\"top\">\n                      Selecciona la Lengua Originaria\n                    </Label>\n                    <LanguagesOptions />\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment>\n                    <Label attached=\"top\">Selecciona su localidad</Label>\n                    <LocationOptions />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top\">Escribe en Lengua Originaria </Label>\n                    <Form>\n                      <TextArea\n                        value={this.state.value}\n                        onChange={this.handleChange.bind(this)}\n                        placeholder=\"A bird in a branch have not fear because it is confidence is on its wings\"\n                      />\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top\">\n                      Agrega la traducción al español\n                    </Label>\n\n                    <Form>\n                      <TextArea placeholder=\"Los usuarios validarán la traducción de tu texto...\" />\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top right\">\n                      Si quieres agrega una imagen\n                    </Label>\n                    <Button color=\"teal\">Buscar en mis archivos</Button> &nbsp;\n                    <Button color=\"orange\">Acceder a la cámara</Button>\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment>\n                    <Label attached=\"top right\">\n                      Selecciona el tipo de contenido\n                    </Label>\n                    <TextTypes />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row />\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment.Group horizontal>\n                    <Segment>\n                      <Checkbox toggle />\n                    </Segment>\n                    <Segment>\n                      <h4>\n                        Permitir que mi publicación y mis datos de hablante sean\n                        utilizados para investigación y fomento al conocimiento\n                        de las Lenguas Originarias\n                      </h4>\n                    </Segment>\n                    <Segment>\n                      <Button\n                        onClick={this.handleClick.bind(this)}\n                        color=\"green\"\n                      >\n                        Publicar{' '}\n                      </Button>\n                    </Segment>\n                  </Segment.Group>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n\n          <div className=\"card-footer text-muted\"> </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Publish;\n*/\n","import React, { Component } from 'react';\nimport { Accordion, Icon, Button } from 'semantic-ui-react';\nimport Publish from './Publish';\n\nexport default class AccordionExampleStandard extends Component {\n  state = { activeIndex: 0 };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const { activeIndex } = this.state;\n\n    return (\n      <Accordion>\n        <Accordion.Title\n          active={activeIndex === 0}\n          index={0}\n          onClick={this.handleClick}\n        >\n          <div className=\"btn-background\">\n            <Button color=\"green\">\n              <Icon name=\"dropdown\" />\n              Publicar\n            </Button>\n          </div>\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <Publish />\n        </Accordion.Content>\n      </Accordion>\n    );\n  }\n}\n\n//WORKING\n// import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\n// import {\n//   Button,\n//   Checkbox,\n//   Grid,\n//   Header,\n//   Icon,\n//   Image,\n//   Menu,\n//   Segment,\n//   Sidebar\n// } from 'semantic-ui-react';\n// import Publish from './Publish';\n// import TimeLine from './TimeLine';\n\n// let buttonNew = 'Nueva Publicación';\n\n// const HorizontalSidebar = ({ animation, direction, visible }) => (\n//   <Sidebar animation={animation} direction={direction} visible={visible}>\n//     <Publish />\n//   </Sidebar>\n// );\n\n// HorizontalSidebar.propTypes = {\n//   animation: PropTypes.string,\n//   direction: PropTypes.string,\n//   visible: PropTypes.bool\n// };\n\n// export default class SidebarTransitions extends Component {\n//   state = {\n//     animation: 'overlay',\n//     direction: 'top',\n//     dimmed: false,\n//     visible: false,\n//     button: 'Nueva Publicación'\n//   };\n\n//   handleAnimationChange = animation => () =>\n//     this.setState(prevState => ({\n//       animation,\n//       visible: !prevState.visible\n//     }));\n\n//   //       handleClick = () => {\n//   //       console.log(this.button, this.visible);\n//   //        if (this.state.visible == false) {\n//   //             console.log(this.button, this.visible)\n//   //           this.setState(this.button: 'Cerrar')} else this.setState(this.button: 'Nueva Publicación');\n\n//   //     };\n\n//   handleDimmedChange = (e, { checked }) => this.setState({ dimmed: checked });\n\n//   //   handleDirectionChange = direction => () =>\n//   //     this.setState({ direction, visible: false });\n\n//   render() {\n//     const { animation, dimmed, direction, visible } = this.state;\n//     const vertical = direction === 'bottom' || direction === 'top';\n\n//     return (\n//       <div>\n//         <div className=\"btn-background\">\n//           <Button color=\"green\" onClick={this.handleAnimationChange('overlay')}>\n//             {this.state.button}\n//           </Button>\n//         </div>\n//         <Sidebar.Pushable>\n//           {vertical ? (\n//             <HorizontalSidebar\n//               animation={animation}\n//               direction={direction}\n//               visible={visible}\n//               // button={button}\n//             />\n//           ) : null}\n\n//           <Sidebar.Pusher dimmed={dimmed && visible}>\n//             <TimeLine />\n//           </Sidebar.Pusher>\n//         </Sidebar.Pushable>\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport { Comment, Header } from 'semantic-ui-react';\n\nconst Comments = () => (\n  <Comment.Group>\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">Matt</Comment.Author>\n        <Comment.Metadata>\n          <div>Hoy a las 5:42PM</div>\n        </Comment.Metadata>\n        <Comment.Text>Gran aporte!</Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Responder</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n    </Comment>\n\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">Elliot Fu</Comment.Author>\n        <Comment.Metadata>\n          <div>Yesterday at 12:30AM</div>\n        </Comment.Metadata>\n        <Comment.Text>\n          <p>This has been very useful for my research. Thanks as well!</p>\n        </Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Responder</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n      <Comment.Group>\n        <Comment>\n          <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\" />\n          <Comment.Content>\n            <Comment.Author as=\"a\">Jenny Hess</Comment.Author>\n            <Comment.Metadata>\n              <div>Just now</div>\n            </Comment.Metadata>\n            <Comment.Text>Elliot you are always so right :)</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action>Responder</Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n      </Comment.Group>\n    </Comment>\n  </Comment.Group>\n);\n\nexport default Comments;\n","import React, { Component } from 'react';\nimport {\n  Feed,\n  Grid,\n  Icon,\n  Button,\n  Comment,\n  Form,\n  Flag,\n  Segment,\n  Image,\n  Label,\n  Rating,\n  GridColumn,\n  Accordion,\n  Header\n} from 'semantic-ui-react';\nimport Comments from './Comments';\nimport { currenUser, picCurrenUser } from './Login';\n\nclass DrawTimeLine extends Component {\n  // toStrDate => (\n  //   console.log(this.props.post);\n  //       this.props.post.map(item =>\n  //         let timeSta = item.date;\n  //         let toDat = toDate(timeSta)\n  //         console.log(toDat));\n  // );\n  state = { activeIndex: 0 };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    console.log(this.props.post);\n    const { activeIndex } = this.state; //ACCORDION\n\n    return (\n      <div>\n        {this.props.post.map(item => (\n          <div className=\"main\">\n            <section className=\"timeLine\">\n              <Segment>\n                <Grid celled=\"internally\">\n                  <Grid.Row>\n                    <Grid.Column width={3}>\n                      <img\n                        className=\"profile\"\n                        alt={item.user}\n                        src={item.userPic}\n                      />\n                      <h5>{item.user}</h5>\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                      <h2>{item.originalLangTitle}</h2>\n                      <h3>{item.spanishTitle}</h3>\n                      <h6>Lengua Originaria, localidad, Municipio, País</h6>\n                    </Grid.Column>\n                    <Grid.Column width={3}>\n                      <p>13 de julio de 2019</p>\n                      <Button as=\"div\" labelPosition=\"left\">\n                        <Label as=\"a\" basic color=\"red\" pointing=\"right\">\n                          2,048\n                        </Label>\n                        <Button color=\"red\">\n                          <Icon name=\"heart\" />\n                        </Button>\n                      </Button>\n                      <div className=\"publisher-btns\">\n                        <Button circular color=\"green\" icon=\"edit\" />\n                        <Button\n                          circular\n                          inverted\n                          color=\"grey\"\n                          icon=\"trash alternate\"\n                        />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <GridColumn width={2}>Etiquetas</GridColumn>\n                    <Grid.Column width={14}>\n                      <Label as=\"a\" color=\"blue\">\n                        Narración Verídica\n                      </Label>\n                      <Label as=\"a\" color=\"orange\" key=\"orange\">\n                        Cuento\n                      </Label>\n                      <Label as=\"a\" color=\"green\" key=\"green\">\n                        Vocabulario\n                      </Label>\n                      <Label as=\"a\" color=\"red\" key=\"red\">\n                        Gramática\n                      </Label>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <Grid.Column width={16}>\n                      <Segment>\n                        <p>{item.originalLangPost}</p>\n                        <Segment.Group horizontal>\n                          <Segment>\n                            Valoración{' '}\n                            <Rating\n                              maxRating={5}\n                              defaultRating={3}\n                              icon=\"star\"\n                            />\n                          </Segment>\n                        </Segment.Group>\n                      </Segment>\n                      <Segment>\n                        <p>{item.spanishPost}</p>\n                        <Segment.Group horizontal>\n                          <Segment>\n                            Valoración{' '}\n                            <Rating\n                              maxRating={5}\n                              defaultRating={3}\n                              icon=\"star\"\n                            />\n                          </Segment>\n                        </Segment.Group>\n                      </Segment>\n                    </Grid.Column>\n                  </Grid.Row>\n\n                  <Grid.Row>\n                    <Grid.Column width={12}>\n                      <Accordion>\n                        <Accordion.Title\n                          active={activeIndex === 0}\n                          index={0}\n                          onClick={this.handleClick}\n                        >\n                          <Header as=\"h3\" dividing className=\"accordion-com\">\n                            Comentarios <Icon name=\"dropdown\" />\n                          </Header>\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                          <Comments />\n                        </Accordion.Content>\n\n                        {/* <Accordion.Title\n          active={activeIndex === 1}\n          index={1}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          What kinds of dogs are there?\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 1}>\n          <p>\n            There are many breeds of dogs. Each breed varies in size and\n            temperament. Owners often select a breed of dog that they find to be\n            compatible with their own lifestyle and desires from a companion.\n          </p>\n        </Accordion.Content> */}\n                      </Accordion>\n                    </Grid.Column>\n                    <Grid.Column width={4}>\n                      <h3>Compartir</h3>\n                      <div>\n                        <Button circular color=\"blue\" icon=\"facebook\" />\n                        <Button circular color=\"twitter\" icon=\"twitter\" />\n                        <Button circular color=\"linkedin\" icon=\"linkedin\" />\n                        <Button circular color=\"teal\" icon=\"share\" />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                {/*  \n\n                {/* <Form reply>\n                    <Button\n                      content=\"Editar\"\n                      labelPosition=\"left\"\n                      icon=\"edit\"\n                      primary\n                    />\n                    <Button\n                      content=\"Eliminar\"\n                      color=\"red\"\n                      labelPosition=\"left\"\n                      icon=\"trash alternate\"\n                    />\n                  </Form>\n\n                  <p className=\"card-text\"> </p>\n                  <a className=\"btn btn-Success\" /> */}\n\n                {/* <Feed>\n                    <Feed.Event>\n                      <Feed.Content>\n                        <Feed.Meta>\n                          <Feed.Like>\n                            <Icon name=\"like\" />4 Likes\n                          </Feed.Like>\n                          <input\n                            placeholder=\"¿A qué lengua pertenece?\"\n                            id=\"Language\"\n                          />\n                        </Feed.Meta>\n                      </Feed.Content>\n                    </Feed.Event>\n                  </Feed>\n                  <div className=\"card-footer text-muted\"> </div>\n                  <div className=\"card-header\">\n                    <Comment.Group>\n                      <p>Comentar...</p>\n                      <img\n                        src={picCurrenUser}\n                        alt={currenUser}\n                        className=\"profile\"\n                      />\n                      <h3> {currenUser}</h3>\n\n                      <Form reply>\n                        <Form.TextArea />\n                        <Button\n                          content=\"Agregar Comentario\"\n                          labelPosition=\"left\"\n                          icon=\"edit\"\n                          primary\n                        />\n                      </Form>\n                    </Comment.Group>\n                    <Coments />\n                  </div> */}\n                {/* </Grid> */}\n              </Segment>\n            </section>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default DrawTimeLine;\n\n/*\n{post && post !== undefined\n                ? post.forEach((item, key) => (\n                    <div>\n                      <h5 key={key} className=\"card-title\">\n                        {item.data.user} </h5>\n                        </div>\n                          ))\n                : null}\n                        */\n","import React, { Component } from 'react';\nimport { db } from './Credentials';\nimport DrawTimeLine from './DrawTimeLine';\n\nlet user = [];\nlet date = [];\nlet originalLangPost = [];\nlet originalLangTitle = [];\nlet postImg = [];\nlet totalPost = [];\n\nclass TimeLine extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    db.collection('timeLine')\n      .orderBy('date', 'desc')\n      .onSnapshot(querySnapshot => {\n        const posts = [];\n        querySnapshot.forEach(doc => {\n          const dataPost = doc.data();\n          posts.push(dataPost);\n          console.log('enviando data', posts);\n        });\n        this.setState({ posts: posts });\n      });\n    //console.log('estado:', this.state.posts);\n  }\n\n  /* working:\n   componentDidMount() {\n    db.collection('timeLine')\n      .orderBy('date', 'desc')\n      .get()\n      .then(querySnapshot => {\n        const posts = [];\n        querySnapshot.forEach(doc => {\n          const dataPost = doc.data();\n          posts.push(dataPost);\n          console.log('enviando data', posts);\n        });\n        this.setState({ posts: posts });\n      });\n    //console.log('estado:', this.state.posts);\n  }\n  */\n\n  //querySnapshot.forEach(doc => {\n  //console.log(\n  // `${doc.id} => ${doc.data().originalLangPost} => ${doc.data().date} => ${\n  //  doc.data().user\n  // } => ${doc.data().userPic}`\n\n  // snapShots => {\n  //   this.setState({\n  //     items: snapShots.docs.map(doc => {\n  //      console.log(snapShots.docs);\n  //     return { id: doc.id, data: doc.data() };\n  //   })\n  //  });\n  // },\n\n  render() {\n    return (\n      <div>\n        <DrawTimeLine post={this.state.posts} />\n      </div>\n    );\n  }\n\n  //const { post } = this.state;\n  //console.log('post value', post);\n}\n\nexport default TimeLine;\n//export { user, date, originalLangPost, postImg, totalPost };\n\n/*\noc.data().user,\n                doc.data().date,\n                doc.data().originalLangPost,\n                doc.data().userPic, \n                */\n","//Splash view components\nimport React, { Component } from 'react';\nimport Brand from '../assets/logoWolf.gif';\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div className=\"intro\">\n        <img src={Brand} className=\"wolf\" alt=\"WolfLogo made by\" />\n        <h1 className=\"Brand\">Vaniusha Co.</h1>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n\n//FIXME:\n//*-Agregar splash como estado de app.js y eliminar este componente\n//TODO:\n// - Revisar los estados y rutas en react\n// - Limpiar las importaciones de este componente\n","import React, { Component } from 'react';\nimport logo from './assets/nierika.jpg';\nimport './App.css';\n//import 'semantic-ui-css/semantic.min.css';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\nimport Splash from './components/Splash';\n//import firebase from 'firebase';\nconsole.log('holi desde app');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      splashEnded: false\n    };\n    console.log(this.state.splashEnded);\n  }\n\n  componentDidMount() {\n    //setTimeOut for the wolf splash\n    if (!this.state.splashEnded) {\n      setTimeout(() => this.setState({ splashEnded: true }), 2000);\n    }\n  }\n  render() {\n    //conditional rendering for Splash:\n    if (!this.state.splashEnded) {\n      return <Splash />;\n    }\n    return (\n      //else bind the Login view and components\n      <div className=\"main\">\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"Nierika Huirrarica\" />\n            <h1 className=\"App-title\">Nierika</h1>\n          </header>\n          <Login />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}