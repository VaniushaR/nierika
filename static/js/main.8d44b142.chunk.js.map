{"version":3,"sources":["assets/nierika.jpg","assets/logoWolf.gif","components/Footer.js","components/Navbar.js","components/Credentials.js","components/Login.js","components/Publish.js","components/Coments.js","components/DrawTimeLine.js","components/TimeLine.js","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","Component","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","currenUser","picCurrenUser","Publish","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","textPosted","language","e","setState","target","postDate","Date","collection","add","date","user","userPic","then","docRef","console","log","catch","error","posting","get","querySnapshot","forEach","doc","src","alt","onChange","handleChange","bind","onClick","handleClick","Feed","Event","Content","Meta","Like","Icon","name","Comments","Comment","Group","Header","as","dividing","Avatar","Author","Metadata","Text","Actions","Action","DrawTimeLine","postImg","totalPost","Form","reply","TextArea","Button","content","labelPosition","icon","primary","Coments","components_TimeLine","TimeLine","post","_this2","posts","data","components_DrawTimeLine","Login","pictures","LoginFB","assertThisInitialized","LoginGoogle","handleLogout","auth","onAuthStateChanged","database","ref","on","snapshot","concat","val","provider","GoogleAuthProvider","signInWithPopup","result","email","code","message","FacebookAuthProvider","signOut","lastLogin","displayName","photoURL","picture","components_Navbar","components_Publish","renderLogin","Splash","Brand","App","splashEnded","setTimeout","logo","components_Login","components_Footer","components_Splash","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d44b142.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nierika.82938523.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logoWolf.a859dd17.gif\";","//Componente footer con los créditos de la web page\nimport React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"App-footer\">\n        <p>\n          Powered by: <em> Laboratoria.</em> CDMX 2018\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","//Crear componente de barra de navegación con bootstrap\nimport React, { Component } from 'react';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\">NIERIKA</a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\">\n                TimeLine <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\">Mi perfil</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\">Mis amigos</a>\n            </li>\n          </ul>\n          <form className=\"form-inline my-2 my-lg-0\">\n            <input\n              className=\"form-control mr-sm-2\"\n              type=\"search\"\n              placeholder=\"Buscar post sobre...\"\n              aria-label=\"Search\"\n            />\n            <button\n              className=\"btn btn-outline-success my-2 my-sm-0\"\n              type=\"submit\"\n            >\n              Buscar\n            </button>\n          </form>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyCgNc_FLBAnpD_90joGLfphWunHY1OYjns',\n  authDomain: 'nierika-7a8d3.firebaseapp.com',\n  databaseURL: 'https://nierika-7a8d3.firebaseio.com',\n  projectId: 'nierika-7a8d3',\n  storageBucket: 'nierika-7a8d3.appspot.com',\n  messagingSenderId: '795639442168'\n};\n\nconst init = firebase.initializeApp(config);\nconst db = firebase.firestore();\ndb.settings({ timestampsInSnapshots: true });\n\nexport { db, init };\n","//Componente Login para ingresar con Facebook\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\n//import { Post } from './Post';\nimport Navbar from './Navbar';\nimport Publish from './Publish';\nimport { db } from './Credentials';\nimport TimeLine from './TimeLine';\n\nlet currenUser;\nlet picCurrenUser;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      pictures: []\n    };\n    this.LoginFB = this.LoginFB.bind(this);\n    this.LoginGoogle = this.LoginGoogle.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ user }); //se resume user¨= user\n    });\n    firebase\n      .database()\n      .ref('pictures')\n      .on('child_added', snapshot => {\n        this.setState({\n          pictures: this.state.pictures.concat(snapshot.val())\n        });\n      });\n  }\n  LoginGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.error(`Error ${error.code}: ${error.message}`));\n  }\n  LoginFB() {\n    let provider = new firebase.auth.FacebookAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.error(`Error ${error.code}: ${error.message}`));\n  }\n\n  handleLogout() {\n    firebase\n      .auth()\n      .signOut()\n      .then(result =>\n        console.log(`${result.user.email} ha terminado su sesión.`)\n      )\n      .catch(error =>\n        console.log(`Ha ocurrido un error ${error.code}: ${error.message}`)\n      );\n  }\n\n  renderLogin() {\n    //if User have an a succesful login, get the date and the user basic data\n    if (this.state.user) {\n      const lastLogin = new Date();\n      currenUser = this.state.user.displayName;\n      console.log(currenUser);\n      picCurrenUser = this.state.user.photoURL;\n      console.log(picCurrenUser);\n      db.collection('users')\n        .add({\n          name: this.state.user.displayName,\n          email: this.state.user.email,\n          picture: this.state.user.photoURL,\n          lastLogin: lastLogin\n        })\n        .then(function(docRef) {\n          console.log('Document written with ID: ', docRef.id);\n        })\n        .catch(function(error) {\n          console.error('Error adding document: ', error);\n        });\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\">\n                    <img\n                      className=\"profile\"\n                      src={this.state.user.photoURL}\n                      alt={this.state.user.displayName}\n                    />\n                    <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </ul>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\">\n                    <h3> {this.state.user.displayName}</h3>\n                    <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </ul>\n              <button className=\"btn btn-danger\" onClick={this.handleLogout}>\n                Salir\n              </button>\n            </div>\n          </nav>\n          <Navbar />\n          <Publish />\n          <TimeLine />\n        </div>\n      );\n    } else {\n      //if user isn't log\n      return (\n        <div className=\"main\">\n          <h2 className=\"welcome\">\n            Red Social para aprender y enseñar una Lengua Originaria\n          </h2>\n          <section className=\"login\">\n            <h2>Inicia Sesión</h2>\n            <button\n              type=\"button\"\n              onClick={this.LoginGoogle}\n              className=\"btn btn-danger google\"\n            >\n              Login con Google\n            </button>\n            <br />\n            <br />\n            <button onClick={this.LoginFB} className=\"btn facebook\" />\n          </section>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return <div className=\"App-intro\">{this.renderLogin()}</div>;\n  }\n}\n\nexport default Login;\nexport { currenUser, picCurrenUser };\n/*\n\nhandleUpload(event) {\n  const file = event.target.files[0];\n  const storageRef = firebase.storage().ref(`Fotos/${file.name}`);\n  const storageRef = firebase.storage().ref('/fotos/');\n  //const task = storageRef.put(file);\n  //const storageRef = firebase.database().ref(`pictures/${file.name}`);\n  //var task = storageRef.put(file);\n\n  task.on(\n    'state_changed',\n    snapshot => {\n      let percentage =\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      this.setState({\n        uploadValue: percentage\n      });\n    },\n    error => {\n      console.error(error.message);\n    },\n    () =>\n      storageRef.getDownloadURL().then(url => {\n        const record = {\n          photoURL: this.state.user.photoURL,\n          displayName: this.state.user.displayName,\n          image: url\n          //image: task.snapshot.downloadURL\n        };\n        const databaseRef = firebase.database().ref('pictures');\n        const newPicture = databaseRef.push();\n        newPicture.set(record);\n      })\n  );\n}\n\n Upload complete\n console.log(task.snapshot);\n      storageRef\n        .child(file.name)\n        .getDownloadURL()\n        .then(url => {\n          this.setState({\n            picture: url\n          });\n        });\n*/\n","import React, { Component } from 'react';\nimport { db } from './Credentials';\nimport { currenUser, picCurrenUser } from './Login';\nimport { Feed, Icon } from 'semantic-ui-react';\n\nconst posting = textPosted => {\n  //const userPost = document.getElementById('userPost');\n  const postDate = new Date();\n\n  db.collection('timeLine')\n    .add({\n      textPosted,\n      date: postDate,\n      user: currenUser,\n      userPic: picCurrenUser\n    })\n    .then(function(docRef) {\n      console.log('Document written with ID: ', docRef.id);\n    })\n    .catch(function(error) {\n      console.error('Error adding document: ', error);\n    });\n};\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      textPosted: '',\n      language: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleClick() {\n    this.setState({ textPosted: this.state.value });\n    posting(this.state.value);\n    db.collection('timeLine')\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          //console.log(\n          // `${doc.id} => ${doc.data().textPosted} => ${doc.data().date} => ${\n          //  doc.data().user\n          // } => ${doc.data().userPic}`\n          //); consoleando la data\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <section className=\"timeLine\">\n          <div className=\"card text-center\">\n            <div className=\"card-header\">\n              <img src={picCurrenUser} alt={currenUser} className=\"profile\" />\n              <h3> {currenUser}</h3>\n            </div>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Special title treatment</h5>\n              <input\n                value={this.state.value}\n                onChange={this.handleChange.bind(this)}\n              />\n              <button onClick={this.handleClick.bind(this)}>publish</button>\n              <p className=\"card-text\" />\n              <a className=\"btn btn-Success\">Go somewhere</a>\n            </div>\n\n            <Feed>\n              <Feed.Event>\n                <Feed.Content>\n                  <Feed.Meta>\n                    <Feed.Like>\n                      <Icon name=\"like\" />4 Likes\n                    </Feed.Like>\n                    <input\n                      placeholder=\"¿A qué lengua pertenece?\"\n                      id=\"Language\"\n                    />\n                  </Feed.Meta>\n                </Feed.Content>\n              </Feed.Event>\n            </Feed>\n            <div className=\"card-footer text-muted\"> </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\n/*\n  render() {\n    return (\n      <Comment.Group>\n        <Form reply>\n          <Form.TextArea />\n          <input id=\"userPost\" />\n          <Button\n            content=\"Publicar\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            primary\n            onClick={posting(userPost)}\n          />\n        </Form>\n      </Comment.Group>\n    );\n  }\n}\n*/\n\nexport default Publish;\n","import React from 'react';\nimport { Comment, Header } from 'semantic-ui-react';\n\nconst Comments = () => (\n  <Comment.Group>\n    <Header as=\"h3\" dividing>\n      Comentarios\n    </Header>\n\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">Matt</Comment.Author>\n        <Comment.Metadata>\n          <div>Hoy a las 5:42PM</div>\n        </Comment.Metadata>\n        <Comment.Text>Gran aporte!</Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Responder</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n    </Comment>\n\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">Elliot Fu</Comment.Author>\n        <Comment.Metadata>\n          <div>Yesterday at 12:30AM</div>\n        </Comment.Metadata>\n        <Comment.Text>\n          <p>This has been very useful for my research. Thanks as well!</p>\n        </Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Reply</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n      <Comment.Group>\n        <Comment>\n          <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\" />\n          <Comment.Content>\n            <Comment.Author as=\"a\">Jenny Hess</Comment.Author>\n            <Comment.Metadata>\n              <div>Just now</div>\n            </Comment.Metadata>\n            <Comment.Text>Elliot you are always so right :)</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action>Reply</Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n      </Comment.Group>\n    </Comment>\n  </Comment.Group>\n);\n\nexport default Comments;\n","import React, { Component } from 'react';\nimport { user, date, textPosted, postImg, totalPost } from './TimeLine';\nimport { Feed, Icon, Button, Comment, Form } from 'semantic-ui-react';\nimport Coments from './Coments';\nimport { currenUser, picCurrenUser } from './Login';\n\nclass DrawTimeLine extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <section className=\"timeLine\">\n          <div className=\"card text-center\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{user} </h5>\n              <img src={postImg} />\n              <p>Post # {totalPost}</p>\n              <p>\" {textPosted} \" escribió.</p>\n              <button>eliminar</button>\n              <button>editar</button>\n              <p className=\"card-text\"> </p>\n              <a className=\"btn btn-Success\" />\n            </div>\n            <Feed>\n              <Feed.Event>\n                <Feed.Content>\n                  <Feed.Meta>\n                    <Feed.Like>\n                      <Icon name=\"like\" />4 Likes\n                    </Feed.Like>\n                    <input\n                      placeholder=\"¿A qué lengua pertenece?\"\n                      id=\"Language\"\n                    />\n                  </Feed.Meta>\n                </Feed.Content>\n              </Feed.Event>\n            </Feed>\n            <div className=\"card-footer text-muted\"> </div>\n            <div className=\"card-header\">\n              <Comment.Group>\n                <p>Comentar...</p>\n                <img src={picCurrenUser} alt={currenUser} className=\"profile\" />\n                <h3> {currenUser}</h3>\n\n                <Form reply>\n                  <Form.TextArea />\n                  <Button\n                    content=\"Agregar Comentario\"\n                    labelPosition=\"left\"\n                    icon=\"edit\"\n                    primary\n                  />\n                </Form>\n              </Comment.Group>\n              <Coments />\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default DrawTimeLine;\n\n/*\n{post && post !== undefined\n                ? post.forEach((item, key) => (\n                    <div>\n                      <h5 key={key} className=\"card-title\">\n                        {item.data.user} </h5>\n                        </div>\n                          ))\n                : null}\n                        */\n","import React, { Component } from 'react';\nimport { db } from './Credentials';\nimport DrawTimeLine from './DrawTimeLine';\n\nlet user = [];\nlet date = [];\nlet textPosted = [];\nlet postImg = [];\nlet totalPost = [];\n\nclass TimeLine extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      post: []\n    };\n  }\n\n  componentDidMount() {\n    db.collection('timeLine')\n      .get()\n      .then(\n        querySnapshot => {\n          this.setState({\n            posts: querySnapshot.forEach(doc => {\n              console.log(\n                'enviando data',\n                doc.data().user,\n                doc.data().date,\n                doc.data().textPosted,\n                doc.data().userPic\n              );\n              return (\n                (user = doc.data().user),\n                (date = doc.data().date),\n                (textPosted = doc.data().textPosted),\n                (postImg = doc.data().userPic),\n                (totalPost = +1)\n              );\n            })\n          });\n        },\n        //querySnapshot.forEach(doc => {\n        //console.log(\n        // `${doc.id} => ${doc.data().textPosted} => ${doc.data().date} => ${\n        //  doc.data().user\n        // } => ${doc.data().userPic}`\n\n        // snapShots => {\n        //   this.setState({\n        //     items: snapShots.docs.map(doc => {\n        //      console.log(snapShots.docs);\n        //     return { id: doc.id, data: doc.data() };\n        //   })\n        //  });\n        // },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  render() {\n    return <DrawTimeLine />;\n  }\n\n  //const { post } = this.state;\n  //console.log('post value', post);\n}\n\nexport default TimeLine;\nexport { user, date, textPosted, postImg, totalPost };\n","//Splash view components\nimport React, { Component } from 'react';\nimport Brand from '../assets/logoWolf.gif';\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div className=\"intro\">\n        <img src={Brand} className=\"wolf\" alt=\"WolfLogo made by\" />\n        <h1 className=\"Brand\">Vaniusha Co.</h1>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n\n//FIXME:\n//*-Agregar splash como estado de app.js y eliminar este componente\n//TODO:\n// - Revisar los estados y rutas en react\n// - Limpiar las importaciones de este componente\n","import React, { Component } from 'react';\nimport logo from './assets/nierika.jpg';\nimport './App.css';\n//import 'semantic-ui-css/semantic.min.css';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\nimport Splash from './components/Splash';\n//import firebase from 'firebase';\nconsole.log('holi desde app');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      splashEnded: false\n    };\n    console.log(this.state.splashEnded);\n  }\n\n  componentDidMount() {\n    if (!this.state.splashEnded) {\n      setTimeout(() => this.setState({ splashEnded: true }), 2000);\n    }\n  }\n  render() {\n    //conditional rendering:\n    if (!this.state.splashEnded) {\n      return <Splash />;\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"Nierika Huirrarica\" />\n          <h1 className=\"App-title\">Nierika</h1>\n        </header>\n        <Login />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}