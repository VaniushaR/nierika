{"version":3,"sources":["assets/nierika.jpg","assets/logoWolf.gif","components/Languages.js","components/Publish.js","components/Footer.js","components/Credentials.js","components/Nav.js","components/UsersList.js","components/TextTypes.js","components/NewPublication.js","components/Comments.js","components/DrawTimeLine.js","components/TimeLine.js","components/Login.js","components/Profile.jsx","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","language","location","image","Footer","react_default","a","createElement","className","Component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","storage","Nav","react_router_dom","to","href","type","placeholder","aria-label","UsersList","Segment","Grid","relaxed","columns","Column","Card","Image","src","wrapped","ui","Content","Header","Meta","Description","extra","Icon","name","options","MexicanLanguages","map","_ref","Abbreviation","Language","State","Location","value","text","Autonym","flag","locationOption","LanguagesOptions","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_ref2","setState","languageSelection","console","log","handleSel","_ref3","state","LangSelected","_ref4","property","push","Row","Label","attached","Dropdown","fluid","clearable","search","onChange","locationSelector","textsTypesTags","selection","TextTypes","handleClick","checked","label","uniqueSelection","Set","tagSelection","toConsumableArray","_this2","List","divided","horizontal","textsTypesTag","Item","key","Checkbox","onClick","Publish","originalLangTitle","originalLangPost","spanishTitle","spanishPost","langLocation","contentType","postImg","imgUpload","allowInv","defineProperty","target","files","storageImg","alert","postDate","Date","toLocaleDateString","year","month","day","collection","add","date","user","currentUser","userPic","picCurrentUser","language_location","textTag","img","allow_inv","then","docRef","id","catch","error","posting","get","querySnapshot","forEach","doc","ref","concat","put","on","snapshot","child","getDownloadURL","url","raised","as","alt","role","Languages","padded","Form","secondary","Input","bind","TextArea","color","handleUpload","Button","components_TextTypes","toggle","defaultChecked","checkboxValue","icon","labelPosition","AccordionExampleStandard","activeIndex","titleProps","index","newIndex","Accordion","Title","active","components_Publish","Comments","Comment","Group","Avatar","Author","Metadata","Text","Actions","Action","DrawTimeLine","handlePythonScripts","postClicked","fetch","res","json","post","item","celled","width","basic","pointing","circular","inverted","GridColumn","tag","Rating","maxRating","defaultRating","dividing","components_Comments","TimeLine","posts","orderBy","onSnapshot","dataPost","data","NewPublication_AccordionExampleStandard","components_DrawTimeLine","Profile","Login","handleItemClick","activeItem","pictures","LoginFB","assertThisInitialized","LoginGoogle","handleLogout","auth","onAuthStateChanged","database","val","provider","GoogleAuthProvider","signInWithPopup","result","email","code","message","FacebookAuthProvider","signOut","_this3","lastLogin","displayName","photoURL","picture","Menu","stackable","position","components_Nav","react_router","path","render","components_TimeLine","assign","component","renderLogin","Splash","Brand","App","splashEnded","setTimeout","logo","components_Login","components_Footer","components_Splash","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14b1d257.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nierika.82938523.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logoWolf.a859dd17.gif\";","import React, { Component } from 'react';\nimport { Dropdown, Segment, Grid, Label } from 'semantic-ui-react';\nimport MexicanLanguages from '../data/mexican_languages';\n\nconst options = MexicanLanguages.map(\n  ({ Abbreviation, Language, State, Location, Autonym }) => ({\n    value: Language,\n    text: '[' + Abbreviation + ']  ' + Language + ' / ' + Autonym,\n    flag: 'mx'\n  })\n);\nlet locationOption = [];\nlet language;\nlet location;\n\nclass LanguagesOptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      languageSelection: ''\n    };\n  }\n\n  locationSelector(LangSelected) {\n    MexicanLanguages.map(({ Language, Location }) => {\n      if (LangSelected === Language) {\n        for (let property in Location) {\n          locationOption.push({\n            value: Location[property],\n            text: Location[property]\n          });\n        }\n      }\n      return locationOption;\n    });\n  }\n\n  handleChange = (e, { value, name }) => {\n    locationOption = [];\n    this.setState({ languageSelection: value });\n    console.log(value);\n    language = value;\n  };\n\n  handleSel = (e, { value }) => {\n    console.log('val: ' + value);\n    location = value;\n  };\n\n  render() {\n    return (\n      <Grid.Row>\n        <Grid.Column>\n          <Segment>\n            <Label attached=\"top\">Selecciona la Lengua Originaria</Label>\n            <Dropdown\n              placeholder=\"Selecciona Lenguaje\"\n              fluid\n              clearable=\"true\"\n              search\n              options={options}\n              onChange={this.handleChange}\n            />\n          </Segment>\n        </Grid.Column>\n        <Grid.Column>\n          <Segment>\n            <Label attached=\"top\">Selecciona la localidad</Label>\n            <Dropdown\n              placeholder=\"Estado, Municipio, Localidad\"\n              fluid\n              clearable=\"true\"\n              search\n              options={locationOption}\n              onChange={\n                (this.locationSelector(this.state.languageSelection),\n                this.handleSel)\n              }\n            />\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    );\n  }\n}\n\nexport default LanguagesOptions;\nexport { language, location };\n","import React, { Component } from 'react';\nimport { db, storage } from './Credentials';\nimport { currentUser, picCurrentUser } from './Login';\nimport LanguagesOptions from './Languages';\nimport TextTypes from './TextTypes';\nimport {\n  Icon,\n  Input,\n  Button,\n  Segment,\n  Checkbox,\n  Grid,\n  Label,\n  Header,\n  TextArea,\n  Form\n} from 'semantic-ui-react';\nimport { language, location } from './Languages';\nimport { selection } from './TextTypes';\n\nlet image;\nconst posting = (\n  originalLangTitle,\n  originalLangPost,\n  spanishTitle,\n  spanishPost,\n  imgUpload,\n  allowInv\n) => {\n  const d = new Date();\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const postDate = d.toLocaleDateString('es-ME', options);\n  //keep img in storage\n  console.log(image);\n  //call img funk\n  db.collection('timeLine')\n    .add({\n      date: postDate,\n      user: currentUser,\n      userPic: picCurrentUser,\n      language: language,\n      language_location: location,\n      originalLangTitle: originalLangTitle,\n      originalLangPost: originalLangPost,\n      spanishTitle: spanishTitle,\n      spanishPost: spanishPost,\n      textTag: selection,\n      img: imgUpload,\n      allow_inv: allowInv\n    })\n    .then(function(docRef) {\n      console.log('Document written with ID: ', docRef.id);\n    })\n    .catch(function(error) {\n      console.error('Error adding document: ', error);\n    });\n};\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalLangTitle: '',\n      originalLangPost: '',\n      spanishTitle: '',\n      spanishPost: '',\n      language: '',\n      langLocation: '',\n      contentType: '',\n      postImg: '',\n      imgUpload: '',\n      allowInv: true\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ language: language, langLocation: location });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleUpload(e) {\n    image = '';\n    if (e.target.files[0]) {\n      image = e.target.files[0];\n      this.storageImg(image);\n    } else {\n      image = '';\n    }\n  }\n\n  handleClick() {\n    console.log(this.state.originalLangTitle, this.state.spanishTitle);\n    // this.validations.bind(this);\n    if (\n      this.state.language == '' ||\n      this.state.originalLangPost == '' ||\n      this.state.originalLangTitle == '' ||\n      this.state.spanishTitle == '' ||\n      this.state.spanishPost == ''\n    ) {\n      alert('Por favor llena todos los campos');\n    } else {\n      posting(\n        this.state.originalLangTitle,\n        this.state.originalLangPost,\n        this.state.spanishTitle,\n        this.state.spanishPost,\n        this.state.imgUpload,\n        this.state.allowInv\n      );\n\n      db.collection('timeLine')\n        .get()\n        .then(querySnapshot => {\n          querySnapshot.forEach(doc => {});\n        });\n      //restart the values:\n      this.setState({\n        originalLangTitle: '',\n        originalLangPost: '',\n        spanishTitle: '',\n        spanishPost: '',\n        language: '',\n        langLocation: '',\n        contentType: '',\n        postImg: '',\n        imgUpload: '',\n        allowInv: true\n      });\n    }\n  }\n\n  checkboxValue() {\n    console.log(this.state.allowInv);\n    console.log('tipo:' + typeof this.state.allowInv);\n    this.setState({\n      allowInv: !this.state.allowInv\n    });\n  }\n\n  storageImg(image) {\n    const uploadTask = storage.ref(`postImages/${image.name}`).put(image);\n    uploadTask.on(\n      'state_changed',\n      snapshot => {\n        console.log('progress');\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        console.log('completed');\n        storage\n          .ref('postImages')\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            console.log('img-url : ', url);\n            // image = url;\n            return this.setState({ imgUpload: url });\n            // return image;\n          });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"newPost\">\n        <section className=\"timeLine\">\n          <Segment raised>\n            <Grid columns=\"equal\">\n              <Grid.Row>\n                <Grid.Column>\n                  <Header as=\"h2\">\n                    <img\n                      src={picCurrentUser}\n                      alt={currentUser}\n                      className=\"profile\"\n                    />\n                    {currentUser}\n                  </Header>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <h4>\n                      ¡Comparte con la comunidad una frase o texto en una lengua\n                      originaria!{' '}\n                      <span role=\"img\" alt=\"happy emoji face\">\n                        {' '}\n                        😄\n                      </span>\n                    </h4>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <LanguagesOptions />\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top\">\n                      {' '}\n                      <Icon name=\"pencil alternate\" />\n                      Escribe en Lengua Originaria{' '}\n                    </Label>\n                    <Form>\n                      <Segment secondary>\n                        <Form.Input\n                          label=\"Título en Lengua Original\"\n                          name=\"originalLangTitle\"\n                          value={this.state.originalLangTitle}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Escribe el Título en su lengua original\"\n                        />\n                        <TextArea\n                          name=\"originalLangPost\"\n                          value={this.state.originalLangPost}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Escribe contenido en lengua original. Preferentemente utiliza puntuación para seccionar las frases en ambas lenguas. Cada aportación es muy valiosa e importante para el conocimiento de las lenguas indígenas originarias de neustro país.\"\n                        />\n                      </Segment>\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top\">\n                      {' '}\n                      <Icon name=\"pencil alternate\" />\n                      Agrega la traducción al español\n                    </Label>\n                    <Form className=\"text-al\">\n                      <Segment secondary>\n                        <Form.Input\n                          label=\"Título en español\"\n                          name=\"spanishTitle\"\n                          value={this.state.spanishTitle}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Escribe el Título en español\"\n                        />\n\n                        <TextArea\n                          name=\"spanishPost\"\n                          value={this.state.spanishPost}\n                          onChange={this.handleChange.bind(this)}\n                          placeholder=\"Escribe la traducción al español equivalente en frases al texto original. Preferentemente utiliza puntuación para seccionar las frases en ambas lenguas. Otros usuarios que compartan la lengua originaria podrán validar y enriquecer tu traducción.\"\n                        />\n                      </Segment>\n                    </Form>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment padded>\n                    <Label attached=\"top right\">\n                      {' '}\n                      <Icon name=\"camera retro\" />\n                      Si quieres agrega una imagen\n                    </Label>\n                    <Input\n                      type=\"file\"\n                      color=\"teal\"\n                      onChange={this.handleUpload.bind(this)}\n                    />\n                    &nbsp;\n                    <Button color=\"orange\">Acceder a la cámara</Button>\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment>\n                    <Label attached=\"top right\">\n                      {' '}\n                      <Icon name=\"tags\" />\n                      Selecciona el tipo de contenido\n                    </Label>\n                    <TextTypes />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row />\n              <Grid.Row>\n                <Grid.Column>\n                  <Segment>\n                    <Checkbox\n                      toggle\n                      defaultChecked\n                      onChange={this.checkboxValue.bind(this)}\n                    />\n                    <h4>\n                      Permitir que mi publicación y mis datos de hablante sean\n                      utilizados para investigación y fomento al conocimiento de\n                      las Lenguas Originarias\n                    </h4>\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <Button\n                    className=\"publicar-btn\"\n                    icon\n                    labelPosition=\"right\"\n                    onClick={this.handleClick.bind(this)}\n                    color=\"green\"\n                  >\n                    <Icon name=\"paper plane outline\" /> Publicar{' '}\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n\n          <div className=\"card-footer text-muted\"> </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Publish;\n\n//TODO: Allow investigation prechecked value to true, allow turn it to false with a e listenner\n//TODO: Allow img posting to DB\n//TODO: Allow the array creation for tags selection and get the logic for draw it on the post\n","//Componente footer con los créditos de la web page\nimport React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"App-footer\">\n        <p>\n          <em>Vania Ramírez &nbsp; </em> &nbsp; CDMX &nbsp; 2019.\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyCgNc_FLBAnpD_90joGLfphWunHY1OYjns',\n  authDomain: 'nierika-7a8d3.firebaseapp.com',\n  databaseURL: 'https://nierika-7a8d3.firebaseio.com',\n  projectId: 'nierika-7a8d3',\n  storageBucket: 'nierika-7a8d3.appspot.com',\n  messagingSenderId: '795639442168'\n};\n\nconst init = firebase.initializeApp(config);\nconst db = firebase.firestore();\nconst storage = firebase.storage();\n//sdb.settings({ timestampsInSnapshots: true });\n\nexport { db, init, storage };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link to=\"/nierika\">\n          <a\n            className=\"navbar-brand\"\n            href=\"https://vaniushar.github.io/nierika/\"\n          >\n            Línea de Tiempo\n          </a>\n        </Link>\n\n        <Link to=\"/perfil\">\n          <a\n            className=\"navbar-brand\"\n            // disabled={visible}\n            // onClick={this.handleShowClick}\n          >\n            Mi perfil\n          </a>\n        </Link>\n\n        <Link to=\"/usuarios\">\n          <a className=\"navbar-brand\">Usuarios</a>\n        </Link>\n        <form className=\"form-inline my-2 my-lg-0 input-align\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Buscar post sobre...\"\n            aria-label=\"Search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Buscar\n          </button>\n        </form>\n        {/* <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        > */}\n        {/* <span className=\"navbar-toggler-icon\" />\n        </button> */}\n        {/* <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/perfil\">\n                <a\n                  className=\"nav-link\"\n                  // disabled={visible}\n                  // onClick={this.handleShowClick}\n                >\n                  Mi perfil\n                </a>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/usuarios\">\n                <a className=\"nav-link\">Usuarios</a>\n              </Link>\n            </li>\n          </ul>\n          <form className=\"form-inline my-2 my-lg-0\">\n            <input\n              className=\"form-control mr-sm-2\"\n              type=\"search\"\n              placeholder=\"Buscar post sobre...\"\n              aria-label=\"Search\"\n            />\n            <button\n              className=\"btn btn-outline-success my-2 my-sm-0\"\n              type=\"submit\"\n            >\n              Buscar\n            </button>\n          </form>\n        </div> */}\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","//Lista de Usuarios que se han logeado y sus datos de hablantes\nimport React, { Component } from 'react';\nimport { Grid, Image, Card, Icon, Segment } from 'semantic-ui-react';\n\nclass UsersList extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Users List</h1>\n        <Segment className=\"usersList\">\n          <Grid relaxed columns={4}>\n            <Grid.Column>\n              <Card>\n                <Image\n                  src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\"\n                  wrapped\n                  ui={false}\n                />\n                <Card.Content>\n                  <Card.Header>Matthew</Card.Header>\n                  <Card.Meta>\n                    <span className=\"date\">Joined in 2015</span>\n                  </Card.Meta>\n                  <Card.Description>\n                    Matthew is a musician living in Nashville.\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <a>\n                    <Icon name=\"user\" />\n                    22 Friends\n                  </a>\n                </Card.Content>\n              </Card>\n              <br />\n              <Image src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\" />\n            </Grid.Column>\n            <Grid.Column>\n              <Image src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\" />\n            </Grid.Column>\n            <Grid.Column>\n              <Image src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\" />\n            </Grid.Column>\n            <Grid.Column>\n              <Image src=\"https://junkmailimages.blob.core.windows.net/large/0208943baf854e878083b11387037936.jpg\" />\n            </Grid.Column>\n          </Grid>\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default UsersList;\n","import React, { Component } from 'react';\nimport { List, Checkbox } from 'semantic-ui-react';\n\nconst textsTypesTags = [\n  'Cuento',\n  'Poesía',\n  'Narración verídica',\n  'Noticia',\n  'Frase o Refrán',\n  'Mito o Leyenda',\n  'Gramática',\n  'Vocabulario'\n];\n\nlet selection = [];\nclass TextTypes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tagSelection: []\n    };\n  }\n\n  handleClick = (e, { checked, label }) => {\n    console.log('Click', checked, 'label:', label);\n    selection.push(label);\n    const uniqueSelection = new Set(selection);\n    // turn to array again with the spread operator\n    this.setState({ tagSelection: [...uniqueSelection] });\n    console.log('state: ' + this.state.tagSelection);\n    return (selection = [...uniqueSelection]);\n  };\n\n  render() {\n    return (\n      <div>\n        <List divided horizontal>\n          {textsTypesTags.map(textsTypesTag => (\n            <List.Item key={textsTypesTag}>\n              <List.Content>\n                <Checkbox\n                  className=\"check-option\"\n                  onClick={this.handleClick}\n                  label={textsTypesTag}\n                />\n              </List.Content>\n            </List.Item>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default TextTypes;\nexport { selection };\n","import React, { Component } from 'react';\nimport { Accordion, Icon, Button } from 'semantic-ui-react';\nimport Publish from './Publish';\n\nexport default class AccordionExampleStandard extends Component {\n  state = { activeIndex: 0 };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const { activeIndex } = this.state;\n\n    return (\n      <Accordion>\n        <Accordion.Title\n          active={activeIndex === 0}\n          index={0}\n          onClick={this.handleClick}\n        >\n          <div className=\"btn-background\">\n            <Button color=\"green\">\n              <Icon name=\"dropdown\" />\n              Publicar\n            </Button>\n          </div>\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <Publish />\n        </Accordion.Content>\n      </Accordion>\n    );\n  }\n}\n\n//WORKING\n// import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\n// import {\n//   Button,\n//   Checkbox,\n//   Grid,\n//   Header,\n//   Icon,\n//   Image,\n//   Menu,\n//   Segment,\n//   Sidebar\n// } from 'semantic-ui-react';\n// import Publish from './Publish';\n// import TimeLine from './TimeLine';\n\n// let buttonNew = 'Nueva Publicación';\n\n// const HorizontalSidebar = ({ animation, direction, visible }) => (\n//   <Sidebar animation={animation} direction={direction} visible={visible}>\n//     <Publish />\n//   </Sidebar>\n// );\n\n// HorizontalSidebar.propTypes = {\n//   animation: PropTypes.string,\n//   direction: PropTypes.string,\n//   visible: PropTypes.bool\n// };\n\n// export default class SidebarTransitions extends Component {\n//   state = {\n//     animation: 'overlay',\n//     direction: 'top',\n//     dimmed: false,\n//     visible: false,\n//     button: 'Nueva Publicación'\n//   };\n\n//   handleAnimationChange = animation => () =>\n//     this.setState(prevState => ({\n//       animation,\n//       visible: !prevState.visible\n//     }));\n\n//   //       handleClick = () => {\n//   //       console.log(this.button, this.visible);\n//   //        if (this.state.visible == false) {\n//   //             console.log(this.button, this.visible)\n//   //           this.setState(this.button: 'Cerrar')} else this.setState(this.button: 'Nueva Publicación');\n\n//   //     };\n\n//   handleDimmedChange = (e, { checked }) => this.setState({ dimmed: checked });\n\n//   //   handleDirectionChange = direction => () =>\n//   //     this.setState({ direction, visible: false });\n\n//   render() {\n//     const { animation, dimmed, direction, visible } = this.state;\n//     const vertical = direction === 'bottom' || direction === 'top';\n\n//     return (\n//       <div>\n//         <div className=\"btn-background\">\n//           <Button color=\"green\" onClick={this.handleAnimationChange('overlay')}>\n//             {this.state.button}\n//           </Button>\n//         </div>\n//         <Sidebar.Pushable>\n//           {vertical ? (\n//             <HorizontalSidebar\n//               animation={animation}\n//               direction={direction}\n//               visible={visible}\n//               // button={button}\n//             />\n//           ) : null}\n\n//           <Sidebar.Pusher dimmed={dimmed && visible}>\n//             <TimeLine />\n//           </Sidebar.Pusher>\n//         </Sidebar.Pushable>\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport { Comment } from 'semantic-ui-react';\n\nconst Comments = () => (\n  <Comment.Group>\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">Matt</Comment.Author>\n        <Comment.Metadata>\n          <div>Hoy a las 5:42PM</div>\n        </Comment.Metadata>\n        <Comment.Text>Gran aporte!</Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Responder</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n    </Comment>\n\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\" />\n      <Comment.Content>\n        <Comment.Author as=\"a\">Elliot Fu</Comment.Author>\n        <Comment.Metadata>\n          <div>Yesterday at 12:30AM</div>\n        </Comment.Metadata>\n        <Comment.Text>\n          <p>This has been very useful for my research. Thanks as well!</p>\n        </Comment.Text>\n        <Comment.Actions>\n          <Comment.Action>Responder</Comment.Action>\n        </Comment.Actions>\n      </Comment.Content>\n      <Comment.Group>\n        <Comment>\n          <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\" />\n          <Comment.Content>\n            <Comment.Author as=\"a\">Jenny Hess</Comment.Author>\n            <Comment.Metadata>\n              <div>Just now</div>\n            </Comment.Metadata>\n            <Comment.Text>Elliot you are always so right :)</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action>Responder</Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n      </Comment.Group>\n    </Comment>\n  </Comment.Group>\n);\n\nexport default Comments;\n","import React, { Component } from 'react';\nimport {\n  Grid,\n  Icon,\n  Button,\n  Segment,\n  Label,\n  Rating,\n  GridColumn,\n  Accordion,\n  Header\n} from 'semantic-ui-react';\nimport Comments from './Comments';\n\nimport { createSecureContext } from 'tls';\n\n//edition available if\n// const handleEdition = (e, user) => {\n//   if (currentUser == user) {\n//     console.log('este usuario debería poder editar');\n//   } else {\n//     console.log('no puede editar porque no es post suyo');\n//   }\n// };\n\n// const handleDeletion = (e, user) => {\n//   if (currentUser == user) {\n//     console.log('usuario:' + user);\n//     console.log('este usuario puede borrar esto');\n//   } else {\n//     console.log('no puede borrar este post');\n//   }\n// };\n//console.log(currentUser);\nclass DrawTimeLine extends Component {\n  state = { activeIndex: 0 };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n  };\n\n  handlePythonScripts = (e, postClicked) => {\n    console.log('python func from react');\n    fetch(\n      '../../NLP/bilingual.json'\n      // {\n      // headers: {\n      //   'Content-Type': 'application/json',\n      //   Accept: 'application/json'\n      // }\n      // }\n    ).then(\n      res => console.log(res.json()),\n\n      error => {\n        console.log(error);\n      }\n    );\n  };\n\n  render() {\n    console.log(this.props.post);\n\n    const { activeIndex } = this.state; //ACCORDION\n\n    let x;\n\n    return (\n      <div>\n        {this.props.post.map((item, key) => (\n          <div key={key} className=\"main\">\n            <section className=\"timeLine\">\n              <Segment>\n                <Grid celled=\"internally\">\n                  <Grid.Row>\n                    <Grid.Column width={3}>\n                      <img\n                        className=\"profile\"\n                        alt={item.user}\n                        src={item.userPic}\n                      />\n                      <h5>{item.user}</h5>\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                      <h2>{item.originalLangTitle}</h2>\n                      <h3>{item.spanishTitle}</h3>\n                      <h6>\n                        {item.language} de {item.language_location}.\n                      </h6>\n                    </Grid.Column>\n                    <Grid.Column width={3}>\n                      <p>{item.date}</p>\n                      <Button as=\"div\" labelPosition=\"left\">\n                        <Label as=\"a\" basic color=\"red\" pointing=\"right\">\n                          2,048\n                        </Label>\n                        <Button color=\"red\">\n                          <Icon name=\"heart\" />\n                        </Button>\n                      </Button>\n                      <div className=\"publisher-btns\">\n                        <Button circular color=\"green\" icon=\"edit\" />\n                        <Button\n                          circular\n                          inverted\n                          color=\"grey\"\n                          icon=\"trash alternate\"\n                          // onClick={handleDeletion(item.user)}\n                        />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <GridColumn width={2}>Etiquetas</GridColumn>\n                    <Grid.Column width={14}>\n                      {item.textTag.map(color => (\n                        <Label key={color} tag>\n                          {color}\n                        </Label>\n                      ))}\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <Grid.Column width={16}>\n                      <Segment>\n                        <img src={item.img} />\n                      </Segment>\n                      <Segment>\n                        <p>{item.originalLangPost}</p>\n                        <Segment.Group horizontal>\n                          <Segment>\n                            Valoración{' '}\n                            <Rating\n                              maxRating={5}\n                              defaultRating={3}\n                              icon=\"star\"\n                            />\n                          </Segment>\n                        </Segment.Group>\n                      </Segment>\n                      <Segment>\n                        <p>{item.spanishPost}</p>\n                        <Segment.Group horizontal>\n                          <Segment>\n                            Valoración{' '}\n                            <Rating\n                              maxRating={5}\n                              defaultRating={3}\n                              icon=\"star\"\n                            />\n                          </Segment>\n                        </Segment.Group>\n                      </Segment>\n                      <Segment>\n                        <button onClick={this.handlePythonScripts}>\n                          Aprender\n                        </button>\n                      </Segment>\n                    </Grid.Column>\n                  </Grid.Row>\n\n                  <Grid.Row>\n                    <Grid.Column width={12}>\n                      <Accordion>\n                        <Accordion.Title\n                          active={activeIndex === 0}\n                          index={0}\n                          onClick={this.handleClick}\n                        >\n                          <Header as=\"h3\" dividing className=\"accordion-com\">\n                            Comentarios <Icon name=\"dropdown\" />\n                          </Header>\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                          <Comments />\n                        </Accordion.Content>\n                      </Accordion>\n                    </Grid.Column>\n                    <Grid.Column width={4}>\n                      <h3>Compartir</h3>\n                      <div>\n                        <Button circular color=\"blue\" icon=\"facebook\" />\n                        <Button circular color=\"twitter\" icon=\"twitter\" />\n                        <Button circular color=\"linkedin\" icon=\"linkedin\" />\n                        <Button circular color=\"teal\" icon=\"share\" />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n            </section>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default DrawTimeLine;\n\n/*\n{post && post !== undefined\n                ? post.forEach((item, key) => (\n                    <div>\n                      <h5 key={key} className=\"card-title\">\n                        {item.data.user} </h5>\n                        </div>\n                          ))\n                : null}\n                        */\n","import React, { Component } from 'react';\nimport { db } from './Credentials';\nimport NewPublication from './NewPublication';\nimport DrawTimeLine from './DrawTimeLine';\nimport { currentUser } from './Login';\n\nconsole.log(currentUser);\nclass TimeLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      user: this.props\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.user);\n    db.collection('timeLine')\n      .orderBy('date', 'desc')\n      .onSnapshot(querySnapshot => {\n        const posts = [];\n        querySnapshot.forEach(doc => {\n          const dataPost = doc.data();\n          posts.push(dataPost);\n          console.log('enviando data', posts);\n        });\n        this.setState({ posts: posts });\n      });\n  }\n  render() {\n    return (\n      <div>\n        <NewPublication />\n        <DrawTimeLine post={this.state.posts} />\n      </div>\n    );\n  }\n}\n\nexport default TimeLine;\n","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { db } from './Credentials';\nimport Nav from './Nav';\nimport { Menu } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport UsersList from './UsersList';\nimport TimeLine from './TimeLine';\nimport Profile from './Profile.jsx';\n\nlet currentUser;\nlet picCurrentUser;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      pictures: []\n    };\n    this.LoginFB = this.LoginFB.bind(this);\n    this.LoginGoogle = this.LoginGoogle.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ user }); //user : user\n    });\n    firebase //para qué hago esto??\n      .database()\n      .ref('pictures')\n      .on('child_added', snapshot => {\n        this.setState({\n          pictures: this.state.pictures.concat(snapshot.val())\n        });\n      });\n  }\n\n  LoginGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.error(`Error ${error.code}: ${error.message}`));\n  }\n  LoginFB() {\n    let provider = new firebase.auth.FacebookAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.error(`Error ${error.code}: ${error.message}`));\n  }\n\n  handleLogout() {\n    firebase\n      .auth()\n      .signOut()\n      .then(result =>\n        console.log(`${result.user.email} ha terminado su sesión.`)\n      )\n      .catch(error =>\n        console.log(`Ha ocurrido un error ${error.code}: ${error.message}`)\n      );\n  }\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  renderLogin() {\n    const { activeItem } = this.state;\n    //if User have an a succesful login, get the date and the user basic data\n    if (this.state.user) {\n      const lastLogin = new Date();\n      currentUser = this.state.user.displayName;\n      console.log(currentUser);\n      picCurrentUser = this.state.user.photoURL;\n      console.log(picCurrentUser);\n      db.collection('users')\n        .add({\n          name: this.state.user.displayName,\n          email: this.state.user.email,\n          picture: this.state.user.photoURL,\n          lastLogin: lastLogin\n        })\n        .then(function(docRef) {\n          console.log('Document written with ID: ', docRef.id);\n        })\n        .catch(function(error) {\n          console.error('Error adding document: ', error);\n        });\n      return (\n        <div>\n          <Menu stackable>\n            <Menu.Item className=\"profile-content\">\n              <img\n                className=\"profile\"\n                src={this.state.user.photoURL}\n                alt={this.state.user.displayName}\n              />\n              <h4 className=\"profile-name\">{this.state.user.displayName}</h4>\n              {/* <span className=\"sr-only\">(current)</span> */}\n            </Menu.Item>\n\n            {/* // <Menu.Item */}\n            {/* //   name={this.state.user.displayName}\n            //   active={activeItem === 'profile'}\n            //   onClick={this.handleItemClick}\n            // >\n            //   {this.state.user.displayName}\n            // </Menu.Item> */}\n            <Menu.Item position=\"right\"></Menu.Item>\n\n            <div className=\"exitBtn\">\n              <button className=\"btn btn-danger\" onClick={this.handleLogout}>\n                Salir\n              </button>\n            </div>\n          </Menu>\n          {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a\n                    className=\"nav-link\"\n                    href=\"https://vaniushar.github.io/nierika/\"\n                  >\n                    <img\n                      className=\"profile\"\n                      src={this.state.user.photoURL}\n                      alt={this.state.user.displayName}\n                    />\n                    <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </ul>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a\n                    className=\"nav-link\"\n                    href=\"https://vaniushar.github.io/nierika/\"\n                  >\n                    <h3> {this.state.user.displayName}</h3>\n                    <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n              </ul>\n              <button className=\"btn btn-danger\" onClick={this.handleLogout}>\n                Salir\n              </button>\n            </div>\n          </nav> */}\n          <Router>\n            <Nav />\n            <Switch>\n              <Route\n                path=\"/nierika\"\n                render={props => (\n                  <TimeLine {...props} user={this.state.user.displayName} />\n                )}\n              />\n              <Route path=\"/usuarios\" component={UsersList} />\n              <Route path=\"/perfil\" component={Profile} />\n            </Switch>\n          </Router>\n        </div>\n      );\n    } else {\n      //if user isn't log   exact component={TimeLine}\n      return (\n        <div className=\"main\">\n          <h2 className=\"welcome\">\n            Red Social para aprender y enseñar una Lengua Originaria\n          </h2>\n          <section className=\"login\">\n            <h2>Inicia Sesión</h2>\n            <button\n              type=\"button\"\n              onClick={this.LoginGoogle}\n              className=\"btn btn-danger google\"\n            >\n              Login con Google\n            </button>\n            <br />\n            <br />\n            <button onClick={this.LoginFB} className=\"btn facebook\" />\n          </section>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return <div className=\"App-intro\">{this.renderLogin()}</div>;\n  }\n}\n\nexport default Login;\nexport { currentUser, picCurrentUser };\n","import React, { Component } from 'react';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Mi perfil</h2>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","//Splash view components\nimport React, { Component } from 'react';\nimport Brand from '../assets/logoWolf.gif';\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div className=\"intro\">\n        <img src={Brand} className=\"wolf\" alt=\"WolfLogo made by\" />\n        <h1 className=\"Brand\">Vaniusha Co.</h1>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n","import React, { Component } from 'react';\nimport logo from './assets/nierika.jpg';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\nimport Splash from './components/Splash';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      splashEnded: false\n    };\n  }\n\n  componentDidMount() {\n    //setTimeOut for the wolf splash 2000mls\n    if (!this.state.splashEnded) {\n      setTimeout(() => this.setState({ splashEnded: true }), 2000);\n    }\n  }\n  render() {\n    //conditional rendering for Splash:\n    if (!this.state.splashEnded) {\n      return <Splash />;\n    }\n    return (\n      //else bind the Login view and components\n      <div className=\"main\">\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img\n              src={logo}\n              className=\"App-logo\"\n              alt=\"Nierika Huirrarica\"\n              href=\"https://vaniushar.github.io/nierika/\"\n            />\n            <h1 className=\"App-title\">Nierika</h1>\n          </header>\n          <Login />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}